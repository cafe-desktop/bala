/* balacodegen.h generated by balac, the Bala compiler, do not modify */

#ifndef __BALACODEGEN_H__
#define __BALACODEGEN_H__

#include <bala.h>
#include <stdlib.h>
#include <string.h>
#include <glib.h>
#include <float.h>
#include <math.h>
#include <glib-object.h>
#include <balaccode.h>
#include <balagee.h>

G_BEGIN_DECLS

#define BALA_TYPE_CCODE_BASE_MODULE (bala_ccode_base_module_get_type ())
#define BALA_CCODE_BASE_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_CCODE_BASE_MODULE, BalaCCodeBaseModule))
#define BALA_CCODE_BASE_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_CCODE_BASE_MODULE, BalaCCodeBaseModuleClass))
#define BALA_IS_CCODE_BASE_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_CCODE_BASE_MODULE))
#define BALA_IS_CCODE_BASE_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_CCODE_BASE_MODULE))
#define BALA_CCODE_BASE_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_CCODE_BASE_MODULE, BalaCCodeBaseModuleClass))

typedef struct _BalaCCodeBaseModule BalaCCodeBaseModule;
typedef struct _BalaCCodeBaseModuleClass BalaCCodeBaseModuleClass;
typedef struct _BalaCCodeBaseModulePrivate BalaCCodeBaseModulePrivate;

#define BALA_CCODE_BASE_MODULE_TYPE_EMIT_CONTEXT (bala_ccode_base_module_emit_context_get_type ())
#define BALA_CCODE_BASE_MODULE_EMIT_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_CCODE_BASE_MODULE_TYPE_EMIT_CONTEXT, BalaCCodeBaseModuleEmitContext))
#define BALA_CCODE_BASE_MODULE_EMIT_CONTEXT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_CCODE_BASE_MODULE_TYPE_EMIT_CONTEXT, BalaCCodeBaseModuleEmitContextClass))
#define BALA_CCODE_BASE_MODULE_IS_EMIT_CONTEXT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_CCODE_BASE_MODULE_TYPE_EMIT_CONTEXT))
#define BALA_CCODE_BASE_MODULE_IS_EMIT_CONTEXT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_CCODE_BASE_MODULE_TYPE_EMIT_CONTEXT))
#define BALA_CCODE_BASE_MODULE_EMIT_CONTEXT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_CCODE_BASE_MODULE_TYPE_EMIT_CONTEXT, BalaCCodeBaseModuleEmitContextClass))

typedef struct _BalaCCodeBaseModuleEmitContext BalaCCodeBaseModuleEmitContext;
typedef struct _BalaCCodeBaseModuleEmitContextClass BalaCCodeBaseModuleEmitContextClass;

#define BALA_TYPE_CCODE_STRUCT_MODULE (bala_ccode_struct_module_get_type ())
#define BALA_CCODE_STRUCT_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_CCODE_STRUCT_MODULE, BalaCCodeStructModule))
#define BALA_CCODE_STRUCT_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_CCODE_STRUCT_MODULE, BalaCCodeStructModuleClass))
#define BALA_IS_CCODE_STRUCT_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_CCODE_STRUCT_MODULE))
#define BALA_IS_CCODE_STRUCT_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_CCODE_STRUCT_MODULE))
#define BALA_CCODE_STRUCT_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_CCODE_STRUCT_MODULE, BalaCCodeStructModuleClass))

typedef struct _BalaCCodeStructModule BalaCCodeStructModule;
typedef struct _BalaCCodeStructModuleClass BalaCCodeStructModuleClass;
typedef struct _BalaCCodeStructModulePrivate BalaCCodeStructModulePrivate;

#define BALA_TYPE_CCODE_METHOD_MODULE (bala_ccode_method_module_get_type ())
#define BALA_CCODE_METHOD_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_CCODE_METHOD_MODULE, BalaCCodeMethodModule))
#define BALA_CCODE_METHOD_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_CCODE_METHOD_MODULE, BalaCCodeMethodModuleClass))
#define BALA_IS_CCODE_METHOD_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_CCODE_METHOD_MODULE))
#define BALA_IS_CCODE_METHOD_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_CCODE_METHOD_MODULE))
#define BALA_CCODE_METHOD_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_CCODE_METHOD_MODULE, BalaCCodeMethodModuleClass))

typedef struct _BalaCCodeMethodModule BalaCCodeMethodModule;
typedef struct _BalaCCodeMethodModuleClass BalaCCodeMethodModuleClass;
typedef struct _BalaCCodeMethodModulePrivate BalaCCodeMethodModulePrivate;

#define BALA_TYPE_CCODE_CONTROL_FLOW_MODULE (bala_ccode_control_flow_module_get_type ())
#define BALA_CCODE_CONTROL_FLOW_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_CCODE_CONTROL_FLOW_MODULE, BalaCCodeControlFlowModule))
#define BALA_CCODE_CONTROL_FLOW_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_CCODE_CONTROL_FLOW_MODULE, BalaCCodeControlFlowModuleClass))
#define BALA_IS_CCODE_CONTROL_FLOW_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_CCODE_CONTROL_FLOW_MODULE))
#define BALA_IS_CCODE_CONTROL_FLOW_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_CCODE_CONTROL_FLOW_MODULE))
#define BALA_CCODE_CONTROL_FLOW_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_CCODE_CONTROL_FLOW_MODULE, BalaCCodeControlFlowModuleClass))

typedef struct _BalaCCodeControlFlowModule BalaCCodeControlFlowModule;
typedef struct _BalaCCodeControlFlowModuleClass BalaCCodeControlFlowModuleClass;
typedef struct _BalaCCodeControlFlowModulePrivate BalaCCodeControlFlowModulePrivate;

#define BALA_TYPE_CCODE_MEMBER_ACCESS_MODULE (bala_ccode_member_access_module_get_type ())
#define BALA_CCODE_MEMBER_ACCESS_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_CCODE_MEMBER_ACCESS_MODULE, BalaCCodeMemberAccessModule))
#define BALA_CCODE_MEMBER_ACCESS_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_CCODE_MEMBER_ACCESS_MODULE, BalaCCodeMemberAccessModuleClass))
#define BALA_IS_CCODE_MEMBER_ACCESS_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_CCODE_MEMBER_ACCESS_MODULE))
#define BALA_IS_CCODE_MEMBER_ACCESS_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_CCODE_MEMBER_ACCESS_MODULE))
#define BALA_CCODE_MEMBER_ACCESS_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_CCODE_MEMBER_ACCESS_MODULE, BalaCCodeMemberAccessModuleClass))

typedef struct _BalaCCodeMemberAccessModule BalaCCodeMemberAccessModule;
typedef struct _BalaCCodeMemberAccessModuleClass BalaCCodeMemberAccessModuleClass;
typedef struct _BalaCCodeMemberAccessModulePrivate BalaCCodeMemberAccessModulePrivate;

#define BALA_TYPE_CCODE_ASSIGNMENT_MODULE (bala_ccode_assignment_module_get_type ())
#define BALA_CCODE_ASSIGNMENT_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_CCODE_ASSIGNMENT_MODULE, BalaCCodeAssignmentModule))
#define BALA_CCODE_ASSIGNMENT_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_CCODE_ASSIGNMENT_MODULE, BalaCCodeAssignmentModuleClass))
#define BALA_IS_CCODE_ASSIGNMENT_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_CCODE_ASSIGNMENT_MODULE))
#define BALA_IS_CCODE_ASSIGNMENT_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_CCODE_ASSIGNMENT_MODULE))
#define BALA_CCODE_ASSIGNMENT_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_CCODE_ASSIGNMENT_MODULE, BalaCCodeAssignmentModuleClass))

typedef struct _BalaCCodeAssignmentModule BalaCCodeAssignmentModule;
typedef struct _BalaCCodeAssignmentModuleClass BalaCCodeAssignmentModuleClass;
typedef struct _BalaCCodeAssignmentModulePrivate BalaCCodeAssignmentModulePrivate;

#define BALA_TYPE_CCODE_METHOD_CALL_MODULE (bala_ccode_method_call_module_get_type ())
#define BALA_CCODE_METHOD_CALL_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_CCODE_METHOD_CALL_MODULE, BalaCCodeMethodCallModule))
#define BALA_CCODE_METHOD_CALL_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_CCODE_METHOD_CALL_MODULE, BalaCCodeMethodCallModuleClass))
#define BALA_IS_CCODE_METHOD_CALL_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_CCODE_METHOD_CALL_MODULE))
#define BALA_IS_CCODE_METHOD_CALL_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_CCODE_METHOD_CALL_MODULE))
#define BALA_CCODE_METHOD_CALL_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_CCODE_METHOD_CALL_MODULE, BalaCCodeMethodCallModuleClass))

typedef struct _BalaCCodeMethodCallModule BalaCCodeMethodCallModule;
typedef struct _BalaCCodeMethodCallModuleClass BalaCCodeMethodCallModuleClass;
typedef struct _BalaCCodeMethodCallModulePrivate BalaCCodeMethodCallModulePrivate;

#define BALA_TYPE_CCODE_ARRAY_MODULE (bala_ccode_array_module_get_type ())
#define BALA_CCODE_ARRAY_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_CCODE_ARRAY_MODULE, BalaCCodeArrayModule))
#define BALA_CCODE_ARRAY_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_CCODE_ARRAY_MODULE, BalaCCodeArrayModuleClass))
#define BALA_IS_CCODE_ARRAY_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_CCODE_ARRAY_MODULE))
#define BALA_IS_CCODE_ARRAY_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_CCODE_ARRAY_MODULE))
#define BALA_CCODE_ARRAY_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_CCODE_ARRAY_MODULE, BalaCCodeArrayModuleClass))

typedef struct _BalaCCodeArrayModule BalaCCodeArrayModule;
typedef struct _BalaCCodeArrayModuleClass BalaCCodeArrayModuleClass;
typedef struct _BalaCCodeArrayModulePrivate BalaCCodeArrayModulePrivate;

#define BALA_TYPE_CCODE_ATTRIBUTE (bala_ccode_attribute_get_type ())
#define BALA_CCODE_ATTRIBUTE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_CCODE_ATTRIBUTE, BalaCCodeAttribute))
#define BALA_CCODE_ATTRIBUTE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_CCODE_ATTRIBUTE, BalaCCodeAttributeClass))
#define BALA_IS_CCODE_ATTRIBUTE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_CCODE_ATTRIBUTE))
#define BALA_IS_CCODE_ATTRIBUTE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_CCODE_ATTRIBUTE))
#define BALA_CCODE_ATTRIBUTE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_CCODE_ATTRIBUTE, BalaCCodeAttributeClass))

typedef struct _BalaCCodeAttribute BalaCCodeAttribute;
typedef struct _BalaCCodeAttributeClass BalaCCodeAttributeClass;
typedef struct _BalaCCodeAttributePrivate BalaCCodeAttributePrivate;
typedef struct _BalaCCodeBaseModuleEmitContextPrivate BalaCCodeBaseModuleEmitContextPrivate;

#define BALA_TYPE_CCODE_COMPILER (bala_ccode_compiler_get_type ())
#define BALA_CCODE_COMPILER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_CCODE_COMPILER, BalaCCodeCompiler))
#define BALA_CCODE_COMPILER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_CCODE_COMPILER, BalaCCodeCompilerClass))
#define BALA_IS_CCODE_COMPILER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_CCODE_COMPILER))
#define BALA_IS_CCODE_COMPILER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_CCODE_COMPILER))
#define BALA_CCODE_COMPILER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_CCODE_COMPILER, BalaCCodeCompilerClass))

typedef struct _BalaCCodeCompiler BalaCCodeCompiler;
typedef struct _BalaCCodeCompilerClass BalaCCodeCompilerClass;
typedef struct _BalaCCodeCompilerPrivate BalaCCodeCompilerPrivate;

#define BALA_TYPE_CCODE_DELEGATE_MODULE (bala_ccode_delegate_module_get_type ())
#define BALA_CCODE_DELEGATE_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_CCODE_DELEGATE_MODULE, BalaCCodeDelegateModule))
#define BALA_CCODE_DELEGATE_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_CCODE_DELEGATE_MODULE, BalaCCodeDelegateModuleClass))
#define BALA_IS_CCODE_DELEGATE_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_CCODE_DELEGATE_MODULE))
#define BALA_IS_CCODE_DELEGATE_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_CCODE_DELEGATE_MODULE))
#define BALA_CCODE_DELEGATE_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_CCODE_DELEGATE_MODULE, BalaCCodeDelegateModuleClass))

typedef struct _BalaCCodeDelegateModule BalaCCodeDelegateModule;
typedef struct _BalaCCodeDelegateModuleClass BalaCCodeDelegateModuleClass;
typedef struct _BalaCCodeDelegateModulePrivate BalaCCodeDelegateModulePrivate;

#define BALA_TYPE_TYPEREGISTER_FUNCTION (bala_typeregister_function_get_type ())
#define BALA_TYPEREGISTER_FUNCTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_TYPEREGISTER_FUNCTION, BalaTypeRegisterFunction))
#define BALA_TYPEREGISTER_FUNCTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_TYPEREGISTER_FUNCTION, BalaTypeRegisterFunctionClass))
#define BALA_IS_TYPEREGISTER_FUNCTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_TYPEREGISTER_FUNCTION))
#define BALA_IS_TYPEREGISTER_FUNCTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_TYPEREGISTER_FUNCTION))
#define BALA_TYPEREGISTER_FUNCTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_TYPEREGISTER_FUNCTION, BalaTypeRegisterFunctionClass))

typedef struct _BalaTypeRegisterFunction BalaTypeRegisterFunction;
typedef struct _BalaTypeRegisterFunctionClass BalaTypeRegisterFunctionClass;
typedef struct _BalaTypeRegisterFunctionPrivate BalaTypeRegisterFunctionPrivate;

#define BALA_TYPE_CLASS_REGISTER_FUNCTION (bala_class_register_function_get_type ())
#define BALA_CLASS_REGISTER_FUNCTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_CLASS_REGISTER_FUNCTION, BalaClassRegisterFunction))
#define BALA_CLASS_REGISTER_FUNCTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_CLASS_REGISTER_FUNCTION, BalaClassRegisterFunctionClass))
#define BALA_IS_CLASS_REGISTER_FUNCTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_CLASS_REGISTER_FUNCTION))
#define BALA_IS_CLASS_REGISTER_FUNCTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_CLASS_REGISTER_FUNCTION))
#define BALA_CLASS_REGISTER_FUNCTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_CLASS_REGISTER_FUNCTION, BalaClassRegisterFunctionClass))

typedef struct _BalaClassRegisterFunction BalaClassRegisterFunction;
typedef struct _BalaClassRegisterFunctionClass BalaClassRegisterFunctionClass;
typedef struct _BalaClassRegisterFunctionPrivate BalaClassRegisterFunctionPrivate;

#define BALA_TYPE_CTYPE (bala_ctype_get_type ())
#define BALA_CTYPE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_CTYPE, BalaCType))
#define BALA_CTYPE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_CTYPE, BalaCTypeClass))
#define BALA_IS_CTYPE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_CTYPE))
#define BALA_IS_CTYPE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_CTYPE))
#define BALA_CTYPE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_CTYPE, BalaCTypeClass))

typedef struct _BalaCType BalaCType;
typedef struct _BalaCTypeClass BalaCTypeClass;
typedef struct _BalaCTypePrivate BalaCTypePrivate;

#define BALA_TYPE_ENUM_REGISTER_FUNCTION (bala_enum_register_function_get_type ())
#define BALA_ENUM_REGISTER_FUNCTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_ENUM_REGISTER_FUNCTION, BalaEnumRegisterFunction))
#define BALA_ENUM_REGISTER_FUNCTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_ENUM_REGISTER_FUNCTION, BalaEnumRegisterFunctionClass))
#define BALA_IS_ENUM_REGISTER_FUNCTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_ENUM_REGISTER_FUNCTION))
#define BALA_IS_ENUM_REGISTER_FUNCTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_ENUM_REGISTER_FUNCTION))
#define BALA_ENUM_REGISTER_FUNCTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_ENUM_REGISTER_FUNCTION, BalaEnumRegisterFunctionClass))

typedef struct _BalaEnumRegisterFunction BalaEnumRegisterFunction;
typedef struct _BalaEnumRegisterFunctionClass BalaEnumRegisterFunctionClass;
typedef struct _BalaEnumRegisterFunctionPrivate BalaEnumRegisterFunctionPrivate;

#define BALA_TYPE_GERROR_MODULE (bala_gerror_module_get_type ())
#define BALA_GERROR_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_GERROR_MODULE, BalaGErrorModule))
#define BALA_GERROR_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_GERROR_MODULE, BalaGErrorModuleClass))
#define BALA_IS_GERROR_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_GERROR_MODULE))
#define BALA_IS_GERROR_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_GERROR_MODULE))
#define BALA_GERROR_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_GERROR_MODULE, BalaGErrorModuleClass))

typedef struct _BalaGErrorModule BalaGErrorModule;
typedef struct _BalaGErrorModuleClass BalaGErrorModuleClass;
typedef struct _BalaGErrorModulePrivate BalaGErrorModulePrivate;

#define BALA_TYPE_GTYPE_MODULE (bala_gtype_module_get_type ())
#define BALA_GTYPE_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_GTYPE_MODULE, BalaGTypeModule))
#define BALA_GTYPE_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_GTYPE_MODULE, BalaGTypeModuleClass))
#define BALA_IS_GTYPE_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_GTYPE_MODULE))
#define BALA_IS_GTYPE_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_GTYPE_MODULE))
#define BALA_GTYPE_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_GTYPE_MODULE, BalaGTypeModuleClass))

typedef struct _BalaGTypeModule BalaGTypeModule;
typedef struct _BalaGTypeModuleClass BalaGTypeModuleClass;
typedef struct _BalaGTypeModulePrivate BalaGTypeModulePrivate;

#define BALA_TYPE_GOBJECT_MODULE (bala_gobject_module_get_type ())
#define BALA_GOBJECT_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_GOBJECT_MODULE, BalaGObjectModule))
#define BALA_GOBJECT_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_GOBJECT_MODULE, BalaGObjectModuleClass))
#define BALA_IS_GOBJECT_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_GOBJECT_MODULE))
#define BALA_IS_GOBJECT_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_GOBJECT_MODULE))
#define BALA_GOBJECT_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_GOBJECT_MODULE, BalaGObjectModuleClass))

typedef struct _BalaGObjectModule BalaGObjectModule;
typedef struct _BalaGObjectModuleClass BalaGObjectModuleClass;
typedef struct _BalaGObjectModulePrivate BalaGObjectModulePrivate;

#define BALA_TYPE_GSIGNAL_MODULE (bala_gsignal_module_get_type ())
#define BALA_GSIGNAL_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_GSIGNAL_MODULE, BalaGSignalModule))
#define BALA_GSIGNAL_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_GSIGNAL_MODULE, BalaGSignalModuleClass))
#define BALA_IS_GSIGNAL_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_GSIGNAL_MODULE))
#define BALA_IS_GSIGNAL_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_GSIGNAL_MODULE))
#define BALA_GSIGNAL_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_GSIGNAL_MODULE, BalaGSignalModuleClass))

typedef struct _BalaGSignalModule BalaGSignalModule;
typedef struct _BalaGSignalModuleClass BalaGSignalModuleClass;
typedef struct _BalaGSignalModulePrivate BalaGSignalModulePrivate;

#define BALA_TYPE_GTK_MODULE (bala_gtk_module_get_type ())
#define BALA_GTK_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_GTK_MODULE, BalaGtkModule))
#define BALA_GTK_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_GTK_MODULE, BalaGtkModuleClass))
#define BALA_IS_GTK_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_GTK_MODULE))
#define BALA_IS_GTK_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_GTK_MODULE))
#define BALA_GTK_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_GTK_MODULE, BalaGtkModuleClass))

typedef struct _BalaGtkModule BalaGtkModule;
typedef struct _BalaGtkModuleClass BalaGtkModuleClass;
typedef struct _BalaGtkModulePrivate BalaGtkModulePrivate;

#define BALA_TYPE_GASYNC_MODULE (bala_gasync_module_get_type ())
#define BALA_GASYNC_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_GASYNC_MODULE, BalaGAsyncModule))
#define BALA_GASYNC_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_GASYNC_MODULE, BalaGAsyncModuleClass))
#define BALA_IS_GASYNC_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_GASYNC_MODULE))
#define BALA_IS_GASYNC_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_GASYNC_MODULE))
#define BALA_GASYNC_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_GASYNC_MODULE, BalaGAsyncModuleClass))

typedef struct _BalaGAsyncModule BalaGAsyncModule;
typedef struct _BalaGAsyncModuleClass BalaGAsyncModuleClass;
typedef struct _BalaGAsyncModulePrivate BalaGAsyncModulePrivate;

#define BALA_TYPE_GVALUE_MODULE (bala_gvalue_module_get_type ())
#define BALA_GVALUE_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_GVALUE_MODULE, BalaGValueModule))
#define BALA_GVALUE_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_GVALUE_MODULE, BalaGValueModuleClass))
#define BALA_IS_GVALUE_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_GVALUE_MODULE))
#define BALA_IS_GVALUE_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_GVALUE_MODULE))
#define BALA_GVALUE_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_GVALUE_MODULE, BalaGValueModuleClass))

typedef struct _BalaGValueModule BalaGValueModule;
typedef struct _BalaGValueModuleClass BalaGValueModuleClass;
typedef struct _BalaGValueModulePrivate BalaGValueModulePrivate;

#define BALA_TYPE_GVARIANT_MODULE (bala_gvariant_module_get_type ())
#define BALA_GVARIANT_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_GVARIANT_MODULE, BalaGVariantModule))
#define BALA_GVARIANT_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_GVARIANT_MODULE, BalaGVariantModuleClass))
#define BALA_IS_GVARIANT_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_GVARIANT_MODULE))
#define BALA_IS_GVARIANT_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_GVARIANT_MODULE))
#define BALA_GVARIANT_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_GVARIANT_MODULE, BalaGVariantModuleClass))

typedef struct _BalaGVariantModule BalaGVariantModule;
typedef struct _BalaGVariantModuleClass BalaGVariantModuleClass;
typedef struct _BalaGVariantModulePrivate BalaGVariantModulePrivate;

#define BALA_TYPE_GD_BUS_MODULE (bala_gd_bus_module_get_type ())
#define BALA_GD_BUS_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_GD_BUS_MODULE, BalaGDBusModule))
#define BALA_GD_BUS_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_GD_BUS_MODULE, BalaGDBusModuleClass))
#define BALA_IS_GD_BUS_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_GD_BUS_MODULE))
#define BALA_IS_GD_BUS_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_GD_BUS_MODULE))
#define BALA_GD_BUS_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_GD_BUS_MODULE, BalaGDBusModuleClass))

typedef struct _BalaGDBusModule BalaGDBusModule;
typedef struct _BalaGDBusModuleClass BalaGDBusModuleClass;
typedef struct _BalaGDBusModulePrivate BalaGDBusModulePrivate;

#define BALA_TYPE_GD_BUS_CLIENT_MODULE (bala_gd_bus_client_module_get_type ())
#define BALA_GD_BUS_CLIENT_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_GD_BUS_CLIENT_MODULE, BalaGDBusClientModule))
#define BALA_GD_BUS_CLIENT_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_GD_BUS_CLIENT_MODULE, BalaGDBusClientModuleClass))
#define BALA_IS_GD_BUS_CLIENT_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_GD_BUS_CLIENT_MODULE))
#define BALA_IS_GD_BUS_CLIENT_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_GD_BUS_CLIENT_MODULE))
#define BALA_GD_BUS_CLIENT_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_GD_BUS_CLIENT_MODULE, BalaGDBusClientModuleClass))

typedef struct _BalaGDBusClientModule BalaGDBusClientModule;
typedef struct _BalaGDBusClientModuleClass BalaGDBusClientModuleClass;
typedef struct _BalaGDBusClientModulePrivate BalaGDBusClientModulePrivate;

#define BALA_TYPE_GD_BUS_SERVER_MODULE (bala_gd_bus_server_module_get_type ())
#define BALA_GD_BUS_SERVER_MODULE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_GD_BUS_SERVER_MODULE, BalaGDBusServerModule))
#define BALA_GD_BUS_SERVER_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_GD_BUS_SERVER_MODULE, BalaGDBusServerModuleClass))
#define BALA_IS_GD_BUS_SERVER_MODULE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_GD_BUS_SERVER_MODULE))
#define BALA_IS_GD_BUS_SERVER_MODULE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_GD_BUS_SERVER_MODULE))
#define BALA_GD_BUS_SERVER_MODULE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_GD_BUS_SERVER_MODULE, BalaGDBusServerModuleClass))

typedef struct _BalaGDBusServerModule BalaGDBusServerModule;
typedef struct _BalaGDBusServerModuleClass BalaGDBusServerModuleClass;
typedef struct _BalaGDBusServerModulePrivate BalaGDBusServerModulePrivate;

#define BALA_TYPE_GIR_WRITER (bala_gir_writer_get_type ())
#define BALA_GIR_WRITER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_GIR_WRITER, BalaGIRWriter))
#define BALA_GIR_WRITER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_GIR_WRITER, BalaGIRWriterClass))
#define BALA_IS_GIR_WRITER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_GIR_WRITER))
#define BALA_IS_GIR_WRITER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_GIR_WRITER))
#define BALA_GIR_WRITER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_GIR_WRITER, BalaGIRWriterClass))

typedef struct _BalaGIRWriter BalaGIRWriter;
typedef struct _BalaGIRWriterClass BalaGIRWriterClass;
typedef struct _BalaGIRWriterPrivate BalaGIRWriterPrivate;

#define BALA_TYPE_GLIB_VALUE (bala_glib_value_get_type ())
#define BALA_GLIB_VALUE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_GLIB_VALUE, BalaGLibValue))
#define BALA_GLIB_VALUE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_GLIB_VALUE, BalaGLibValueClass))
#define BALA_IS_GLIB_VALUE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_GLIB_VALUE))
#define BALA_IS_GLIB_VALUE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_GLIB_VALUE))
#define BALA_GLIB_VALUE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_GLIB_VALUE, BalaGLibValueClass))

typedef struct _BalaGLibValue BalaGLibValue;
typedef struct _BalaGLibValueClass BalaGLibValueClass;
typedef struct _BalaGLibValuePrivate BalaGLibValuePrivate;

#define BALA_TYPE_INTERFACE_REGISTER_FUNCTION (bala_interface_register_function_get_type ())
#define BALA_INTERFACE_REGISTER_FUNCTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_INTERFACE_REGISTER_FUNCTION, BalaInterfaceRegisterFunction))
#define BALA_INTERFACE_REGISTER_FUNCTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_INTERFACE_REGISTER_FUNCTION, BalaInterfaceRegisterFunctionClass))
#define BALA_IS_INTERFACE_REGISTER_FUNCTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_INTERFACE_REGISTER_FUNCTION))
#define BALA_IS_INTERFACE_REGISTER_FUNCTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_INTERFACE_REGISTER_FUNCTION))
#define BALA_INTERFACE_REGISTER_FUNCTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_INTERFACE_REGISTER_FUNCTION, BalaInterfaceRegisterFunctionClass))

typedef struct _BalaInterfaceRegisterFunction BalaInterfaceRegisterFunction;
typedef struct _BalaInterfaceRegisterFunctionClass BalaInterfaceRegisterFunctionClass;
typedef struct _BalaInterfaceRegisterFunctionPrivate BalaInterfaceRegisterFunctionPrivate;

#define BALA_TYPE_STRUCT_REGISTER_FUNCTION (bala_struct_register_function_get_type ())
#define BALA_STRUCT_REGISTER_FUNCTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_STRUCT_REGISTER_FUNCTION, BalaStructRegisterFunction))
#define BALA_STRUCT_REGISTER_FUNCTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_STRUCT_REGISTER_FUNCTION, BalaStructRegisterFunctionClass))
#define BALA_IS_STRUCT_REGISTER_FUNCTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_STRUCT_REGISTER_FUNCTION))
#define BALA_IS_STRUCT_REGISTER_FUNCTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_STRUCT_REGISTER_FUNCTION))
#define BALA_STRUCT_REGISTER_FUNCTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_STRUCT_REGISTER_FUNCTION, BalaStructRegisterFunctionClass))

typedef struct _BalaStructRegisterFunction BalaStructRegisterFunction;
typedef struct _BalaStructRegisterFunctionClass BalaStructRegisterFunctionClass;
typedef struct _BalaStructRegisterFunctionPrivate BalaStructRegisterFunctionPrivate;

struct _BalaCCodeBaseModule {
	BalaCodeGenerator parent_instance;
	BalaSymbol* root_symbol;
	BalaCCodeBaseModuleEmitContext* emit_context;
	BalaCCodeLineDirective* current_line;
	BalaCCodeFile* header_file;
	BalaCCodeFile* internal_header_file;
	BalaCCodeFile* cfile;
	BalaCCodeBaseModuleEmitContext* class_init_context;
	BalaCCodeBaseModuleEmitContext* base_init_context;
	BalaCCodeBaseModuleEmitContext* class_finalize_context;
	BalaCCodeBaseModuleEmitContext* base_finalize_context;
	BalaCCodeBaseModuleEmitContext* instance_init_context;
	BalaCCodeBaseModuleEmitContext* instance_finalize_context;
	BalaCCodeStruct* param_spec_struct;
	BalaCCodeStruct* closure_struct;
	BalaCCodeEnum* prop_enum;
	BalaCCodeEnum* signal_enum;
	BalaSet* user_marshal_set;
	BalaSet* predefined_marshal_set;
	gint next_regex_id;
	BalaDataType* void_type;
	BalaDataType* bool_type;
	BalaDataType* char_type;
	BalaDataType* uchar_type;
	BalaDataType* unichar_type;
	BalaDataType* short_type;
	BalaDataType* ushort_type;
	BalaDataType* int_type;
	BalaDataType* uint_type;
	BalaDataType* long_type;
	BalaDataType* ulong_type;
	BalaDataType* int8_type;
	BalaDataType* uint8_type;
	BalaDataType* int16_type;
	BalaDataType* uint16_type;
	BalaDataType* int32_type;
	BalaDataType* uint32_type;
	BalaDataType* int64_type;
	BalaDataType* uint64_type;
	BalaDataType* size_t_type;
	BalaDataType* string_type;
	BalaDataType* regex_type;
	BalaDataType* float_type;
	BalaDataType* double_type;
	BalaDataType* pointer_type;
	BalaTypeSymbol* gtype_type;
	BalaTypeSymbol* gobject_type;
	BalaErrorType* gerror_type;
	BalaClass* glist_type;
	BalaClass* gslist_type;
	BalaClass* gnode_type;
	BalaClass* gqueue_type;
	BalaClass* gvaluearray_type;
	BalaTypeSymbol* gstringbuilder_type;
	BalaTypeSymbol* garray_type;
	BalaTypeSymbol* gbytearray_type;
	BalaTypeSymbol* gptrarray_type;
	BalaTypeSymbol* gthreadpool_type;
	BalaDataType* gquark_type;
	BalaStruct* gvalue_type;
	BalaClass* gvariant_type;
	BalaStruct* mutex_type;
	BalaStruct* gmutex_type;
	BalaStruct* grecmutex_type;
	BalaStruct* grwlock_type;
	BalaStruct* gcond_type;
	BalaClass* gsource_type;
	BalaTypeSymbol* type_module_type;
	BalaTypeSymbol* dbus_proxy_type;
	BalaClass* gtk_widget_type;
	BalaDataType* delegate_target_type;
	BalaDelegateType* delegate_target_destroy_type;
	gboolean in_plugin;
	gchar* module_init_param_name;
	gboolean requires_assert;
	gboolean requires_array_free;
	gboolean requires_array_move;
	gboolean requires_array_length;
	gboolean requires_array_n_elements;
	gboolean requires_clear_mutex;
	BalaSet* wrappers;
	BalaCCodeBaseModulePrivate * priv;
};

struct _BalaCCodeBaseModuleClass {
	BalaCodeGeneratorClass parent_class;
	void (*append_bala_array_free) (BalaCCodeBaseModule* self);
	void (*append_bala_array_move) (BalaCCodeBaseModule* self);
	void (*append_bala_array_length) (BalaCCodeBaseModule* self);
	void (*append_params_array) (BalaCCodeBaseModule* self, BalaMethod* m);
	gboolean (*generate_enum_declaration) (BalaCCodeBaseModule* self, BalaEnum* en, BalaCCodeFile* decl_space);
	void (*generate_class_struct_declaration) (BalaCCodeBaseModule* self, BalaClass* cl, BalaCCodeFile* decl_space);
	void (*generate_struct_declaration) (BalaCCodeBaseModule* self, BalaStruct* st, BalaCCodeFile* decl_space);
	void (*generate_delegate_declaration) (BalaCCodeBaseModule* self, BalaDelegate* d, BalaCCodeFile* decl_space);
	void (*generate_cparameters) (BalaCCodeBaseModule* self, BalaMethod* m, BalaCCodeFile* decl_space, BalaMap* cparam_map, BalaCCodeFunction* func, BalaCCodeFunctionDeclarator* vdeclarator, BalaMap* carg_map, BalaCCodeFunctionCall* vcall, gint direction);
	BalaCCodeExpression* (*get_dup_func_expression) (BalaCCodeBaseModule* self, BalaDataType* type, BalaSourceReference* source_reference, gboolean is_chainup);
	gchar* (*append_struct_array_destroy) (BalaCCodeBaseModule* self, BalaStruct* st);
	gchar* (*append_struct_array_free) (BalaCCodeBaseModule* self, BalaStruct* st);
	BalaCCodeExpression* (*destroy_value) (BalaCCodeBaseModule* self, BalaTargetValue* value, gboolean is_macro_definition);
	void (*append_scope_free) (BalaCCodeBaseModule* self, BalaSymbol* sym, BalaCodeNode* stop_at);
	BalaTargetValue* (*get_local_cvalue) (BalaCCodeBaseModule* self, BalaLocalVariable* local);
	BalaTargetValue* (*get_parameter_cvalue) (BalaCCodeBaseModule* self, BalaParameter* param);
	BalaTargetValue* (*get_field_cvalue) (BalaCCodeBaseModule* self, BalaField* field, BalaTargetValue* instance);
	BalaTargetValue* (*load_variable) (BalaCCodeBaseModule* self, BalaVariable* variable, BalaTargetValue* value, BalaExpression* expr);
	BalaTargetValue* (*load_this_parameter) (BalaCCodeBaseModule* self, BalaTypeSymbol* sym);
	void (*store_value) (BalaCCodeBaseModule* self, BalaTargetValue* lvalue, BalaTargetValue* value, BalaSourceReference* source_reference);
	gchar* (*get_delegate_target_cname) (BalaCCodeBaseModule* self, const gchar* delegate_cname);
	BalaCCodeExpression* (*get_delegate_target_cexpression) (BalaCCodeBaseModule* self, BalaExpression* delegate_expr, BalaCCodeExpression* * delegate_target_destroy_notify);
	BalaCCodeExpression* (*get_delegate_target_cvalue) (BalaCCodeBaseModule* self, BalaTargetValue* value);
	BalaCCodeExpression* (*get_delegate_target_destroy_notify_cvalue) (BalaCCodeBaseModule* self, BalaTargetValue* value);
	gchar* (*get_delegate_target_destroy_notify_cname) (BalaCCodeBaseModule* self, const gchar* delegate_cname);
	BalaTargetValue* (*copy_value) (BalaCCodeBaseModule* self, BalaTargetValue* value, BalaCodeNode* node);
	void (*generate_class_declaration) (BalaCCodeBaseModule* self, BalaClass* cl, BalaCCodeFile* decl_space);
	void (*generate_interface_declaration) (BalaCCodeBaseModule* self, BalaInterface* iface, BalaCCodeFile* decl_space);
	gboolean (*generate_method_declaration) (BalaCCodeBaseModule* self, BalaMethod* m, BalaCCodeFile* decl_space);
	void (*generate_error_domain_declaration) (BalaCCodeBaseModule* self, BalaErrorDomain* edomain, BalaCCodeFile* decl_space);
	BalaCCodeExpression* (*deserialize_expression) (BalaCCodeBaseModule* self, BalaDataType* type, BalaCCodeExpression* variant_expr, BalaCCodeExpression* expr, BalaCCodeExpression* error_expr, gboolean* may_fail);
	BalaCCodeExpression* (*serialize_expression) (BalaCCodeBaseModule* self, BalaDataType* type, BalaCCodeExpression* expr);
	BalaCCodeExpression* (*get_implicit_cast_expression) (BalaCCodeBaseModule* self, BalaCCodeExpression* source_cexpr, BalaDataType* expression_type, BalaDataType* target_type, BalaCodeNode* node);
	void (*create_type_check_statement) (BalaCCodeBaseModule* self, BalaCodeNode* method_node, BalaDataType* ret_type, BalaTypeSymbol* t, gboolean non_null, const gchar* var_name);
	void (*generate_dynamic_method_wrapper) (BalaCCodeBaseModule* self, BalaDynamicMethod* method);
	gboolean (*method_has_wrapper) (BalaCCodeBaseModule* self, BalaMethod* method);
	BalaCCodeExpression* (*get_param_spec_cexpression) (BalaCCodeBaseModule* self, BalaProperty* prop);
	BalaCCodeExpression* (*get_param_spec) (BalaCCodeBaseModule* self, BalaProperty* prop);
	BalaCCodeExpression* (*get_signal_creation) (BalaCCodeBaseModule* self, BalaSignal* sig, BalaObjectTypeSymbol* type);
	BalaCCodeExpression* (*get_value_getter_function) (BalaCCodeBaseModule* self, BalaDataType* type_reference);
	BalaCCodeExpression* (*get_value_setter_function) (BalaCCodeBaseModule* self, BalaDataType* type_reference);
	BalaCCodeExpression* (*get_value_taker_function) (BalaCCodeBaseModule* self, BalaDataType* type_reference);
	void (*register_dbus_info) (BalaCCodeBaseModule* self, BalaCCodeBlock* block, BalaObjectTypeSymbol* bindable);
	gchar* (*get_dynamic_property_getter_cname) (BalaCCodeBaseModule* self, BalaDynamicProperty* node);
	gchar* (*get_dynamic_property_setter_cname) (BalaCCodeBaseModule* self, BalaDynamicProperty* node);
	gchar* (*get_dynamic_signal_cname) (BalaCCodeBaseModule* self, BalaDynamicSignal* node);
	gchar* (*get_dynamic_signal_connect_wrapper_name) (BalaCCodeBaseModule* self, BalaDynamicSignal* node);
	gchar* (*get_dynamic_signal_connect_after_wrapper_name) (BalaCCodeBaseModule* self, BalaDynamicSignal* node);
	gchar* (*get_dynamic_signal_disconnect_wrapper_name) (BalaCCodeBaseModule* self, BalaDynamicSignal* node);
	gchar* (*get_array_length_cname) (BalaCCodeBaseModule* self, const gchar* array_cname, gint dim);
	gchar* (*get_variable_array_length_cname) (BalaCCodeBaseModule* self, BalaVariable* variable, gint dim);
	BalaCCodeExpression* (*get_array_length_cexpression) (BalaCCodeBaseModule* self, BalaExpression* array_expr, gint dim);
	BalaCCodeExpression* (*get_array_length_cvalue) (BalaCCodeBaseModule* self, BalaTargetValue* value, gint dim);
	gchar* (*get_array_size_cname) (BalaCCodeBaseModule* self, const gchar* array_cname);
	void (*add_simple_check) (BalaCCodeBaseModule* self, BalaCodeNode* node, gboolean always_fails);
	gchar* (*generate_ready_function) (BalaCCodeBaseModule* self, BalaMethod* m);
};

struct _BalaCCodeStructModule {
	BalaCCodeBaseModule parent_instance;
	BalaCCodeStructModulePrivate * priv;
};

struct _BalaCCodeStructModuleClass {
	BalaCCodeBaseModuleClass parent_class;
};

struct _BalaCCodeMethodModule {
	BalaCCodeStructModule parent_instance;
	BalaCCodeMethodModulePrivate * priv;
};

struct _BalaCCodeMethodModuleClass {
	BalaCCodeStructModuleClass parent_class;
	void (*generate_method_result_declaration) (BalaCCodeMethodModule* self, BalaMethod* m, BalaCCodeFile* decl_space, BalaCCodeFunction* cfunc, BalaMap* cparam_map, BalaMap* carg_map);
	BalaCCodeParameter* (*generate_parameter) (BalaCCodeMethodModule* self, BalaParameter* param, BalaCCodeFile* decl_space, BalaMap* cparam_map, BalaMap* carg_map);
};

struct _BalaCCodeControlFlowModule {
	BalaCCodeMethodModule parent_instance;
	BalaCCodeControlFlowModulePrivate * priv;
};

struct _BalaCCodeControlFlowModuleClass {
	BalaCCodeMethodModuleClass parent_class;
};

struct _BalaCCodeMemberAccessModule {
	BalaCCodeControlFlowModule parent_instance;
	BalaCCodeMemberAccessModulePrivate * priv;
};

struct _BalaCCodeMemberAccessModuleClass {
	BalaCCodeControlFlowModuleClass parent_class;
};

struct _BalaCCodeAssignmentModule {
	BalaCCodeMemberAccessModule parent_instance;
	BalaCCodeAssignmentModulePrivate * priv;
};

struct _BalaCCodeAssignmentModuleClass {
	BalaCCodeMemberAccessModuleClass parent_class;
};

struct _BalaCCodeMethodCallModule {
	BalaCCodeAssignmentModule parent_instance;
	BalaCCodeMethodCallModulePrivate * priv;
};

struct _BalaCCodeMethodCallModuleClass {
	BalaCCodeAssignmentModuleClass parent_class;
};

struct _BalaCCodeArrayModule {
	BalaCCodeMethodCallModule parent_instance;
	BalaCCodeArrayModulePrivate * priv;
};

struct _BalaCCodeArrayModuleClass {
	BalaCCodeMethodCallModuleClass parent_class;
};

struct _BalaCCodeAttribute {
	BalaAttributeCache parent_instance;
	BalaCCodeAttributePrivate * priv;
};

struct _BalaCCodeAttributeClass {
	BalaAttributeCacheClass parent_class;
};

struct _BalaCCodeBaseModuleEmitContext {
	GTypeInstance parent_instance;
	volatile int ref_count;
	BalaSymbol* current_symbol;
	BalaArrayList* symbol_stack;
	BalaTryStatement* current_try;
	gint current_try_id;
	gint next_try_id;
	BalaCatchClause* current_catch;
	BalaCCodeFunction* ccode;
	BalaArrayList* ccode_stack;
	BalaArrayList* temp_ref_values;
	gint next_temp_var_id;
	gint current_inner_error_id;
	gboolean current_method_inner_error;
	gboolean current_method_return;
	gint next_coroutine_state;
	BalaMap* variable_name_map;
	BalaMap* closure_variable_count_map;
	BalaMap* closure_variable_clash_map;
	gboolean is_in_method_precondition;
	BalaCCodeBaseModuleEmitContextPrivate * priv;
};

struct _BalaCCodeBaseModuleEmitContextClass {
	GTypeClass parent_class;
	void (*finalize) (BalaCCodeBaseModuleEmitContext *self);
};

struct _BalaCCodeCompiler {
	GTypeInstance parent_instance;
	volatile int ref_count;
	BalaCCodeCompilerPrivate * priv;
};

struct _BalaCCodeCompilerClass {
	GTypeClass parent_class;
	void (*finalize) (BalaCCodeCompiler *self);
};

struct _BalaCCodeDelegateModule {
	BalaCCodeArrayModule parent_instance;
	BalaCCodeDelegateModulePrivate * priv;
};

struct _BalaCCodeDelegateModuleClass {
	BalaCCodeArrayModuleClass parent_class;
};

struct _BalaTypeRegisterFunction {
	GTypeInstance parent_instance;
	volatile int ref_count;
	BalaTypeRegisterFunctionPrivate * priv;
};

struct _BalaTypeRegisterFunctionClass {
	GTypeClass parent_class;
	void (*finalize) (BalaTypeRegisterFunction *self);
	BalaTypeSymbol* (*get_type_declaration) (BalaTypeRegisterFunction* self);
	gchar* (*get_type_struct_name) (BalaTypeRegisterFunction* self);
	gchar* (*get_base_init_func_name) (BalaTypeRegisterFunction* self);
	gchar* (*get_class_finalize_func_name) (BalaTypeRegisterFunction* self);
	gchar* (*get_base_finalize_func_name) (BalaTypeRegisterFunction* self);
	gchar* (*get_class_init_func_name) (BalaTypeRegisterFunction* self);
	gchar* (*get_instance_struct_size) (BalaTypeRegisterFunction* self);
	gchar* (*get_instance_init_func_name) (BalaTypeRegisterFunction* self);
	gchar* (*get_parent_type_name) (BalaTypeRegisterFunction* self);
	gchar* (*get_gtype_value_table_init_function_name) (BalaTypeRegisterFunction* self);
	gchar* (*get_gtype_value_table_peek_pointer_function_name) (BalaTypeRegisterFunction* self);
	gchar* (*get_gtype_value_table_free_function_name) (BalaTypeRegisterFunction* self);
	gchar* (*get_gtype_value_table_copy_function_name) (BalaTypeRegisterFunction* self);
	gchar* (*get_gtype_value_table_lcopy_value_function_name) (BalaTypeRegisterFunction* self);
	gchar* (*get_gtype_value_table_collect_value_function_name) (BalaTypeRegisterFunction* self);
	gchar* (*get_type_flags) (BalaTypeRegisterFunction* self);
	BalaCCodeFragment* (*get_type_interface_init_declaration) (BalaTypeRegisterFunction* self);
	void (*get_type_interface_init_statements) (BalaTypeRegisterFunction* self, BalaCodeContext* context, BalaCCodeBlock* block, gboolean plugin);
	BalaSymbolAccessibility (*get_accessibility) (BalaTypeRegisterFunction* self);
};

struct _BalaClassRegisterFunction {
	BalaTypeRegisterFunction parent_instance;
	BalaClassRegisterFunctionPrivate * priv;
};

struct _BalaClassRegisterFunctionClass {
	BalaTypeRegisterFunctionClass parent_class;
};

struct _BalaCType {
	BalaDataType parent_instance;
	BalaCTypePrivate * priv;
};

struct _BalaCTypeClass {
	BalaDataTypeClass parent_class;
};

struct _BalaEnumRegisterFunction {
	BalaTypeRegisterFunction parent_instance;
	BalaEnumRegisterFunctionPrivate * priv;
};

struct _BalaEnumRegisterFunctionClass {
	BalaTypeRegisterFunctionClass parent_class;
};

struct _BalaGErrorModule {
	BalaCCodeDelegateModule parent_instance;
	BalaGErrorModulePrivate * priv;
};

struct _BalaGErrorModuleClass {
	BalaCCodeDelegateModuleClass parent_class;
	void (*return_with_exception) (BalaGErrorModule* self, BalaCCodeExpression* error_expr);
};

struct _BalaGTypeModule {
	BalaGErrorModule parent_instance;
	BalaGTypeModulePrivate * priv;
};

struct _BalaGTypeModuleClass {
	BalaGErrorModuleClass parent_class;
	void (*generate_virtual_method_declaration) (BalaGTypeModule* self, BalaMethod* m, BalaCCodeFile* decl_space, BalaCCodeStruct* type_struct);
	void (*generate_class_init) (BalaGTypeModule* self, BalaClass* cl);
	void (*end_instance_init) (BalaGTypeModule* self, BalaClass* cl);
};

struct _BalaGObjectModule {
	BalaGTypeModule parent_instance;
	BalaGObjectModulePrivate * priv;
};

struct _BalaGObjectModuleClass {
	BalaGTypeModuleClass parent_class;
};

struct _BalaGSignalModule {
	BalaGObjectModule parent_instance;
	BalaGSignalModulePrivate * priv;
};

struct _BalaGSignalModuleClass {
	BalaGObjectModuleClass parent_class;
};

struct _BalaGtkModule {
	BalaGSignalModule parent_instance;
	BalaGtkModulePrivate * priv;
};

struct _BalaGtkModuleClass {
	BalaGSignalModuleClass parent_class;
};

struct _BalaGAsyncModule {
	BalaGtkModule parent_instance;
	BalaGAsyncModulePrivate * priv;
};

struct _BalaGAsyncModuleClass {
	BalaGtkModuleClass parent_class;
};

struct _BalaGValueModule {
	BalaGAsyncModule parent_instance;
	BalaGValueModulePrivate * priv;
};

struct _BalaGValueModuleClass {
	BalaGAsyncModuleClass parent_class;
};

struct _BalaGVariantModule {
	BalaGValueModule parent_instance;
	BalaGVariantModulePrivate * priv;
};

struct _BalaGVariantModuleClass {
	BalaGValueModuleClass parent_class;
};

struct _BalaGDBusModule {
	BalaGVariantModule parent_instance;
	BalaGDBusModulePrivate * priv;
};

struct _BalaGDBusModuleClass {
	BalaGVariantModuleClass parent_class;
};

struct _BalaGDBusClientModule {
	BalaGDBusModule parent_instance;
	BalaGDBusClientModulePrivate * priv;
};

struct _BalaGDBusClientModuleClass {
	BalaGDBusModuleClass parent_class;
};

struct _BalaGDBusServerModule {
	BalaGDBusClientModule parent_instance;
	BalaGDBusServerModulePrivate * priv;
};

struct _BalaGDBusServerModuleClass {
	BalaGDBusClientModuleClass parent_class;
};

struct _BalaGIRWriter {
	BalaCodeVisitor parent_instance;
	BalaGIRWriterPrivate * priv;
};

struct _BalaGIRWriterClass {
	BalaCodeVisitorClass parent_class;
	gchar* (*get_interface_comment) (BalaGIRWriter* self, BalaInterface* iface);
	gchar* (*get_struct_comment) (BalaGIRWriter* self, BalaStruct* st);
	gchar* (*get_enum_comment) (BalaGIRWriter* self, BalaEnum* en);
	gchar* (*get_class_comment) (BalaGIRWriter* self, BalaClass* c);
	gchar* (*get_error_code_comment) (BalaGIRWriter* self, BalaErrorCode* ecode);
	gchar* (*get_enum_value_comment) (BalaGIRWriter* self, BalaEnumValue* ev);
	gchar* (*get_constant_comment) (BalaGIRWriter* self, BalaConstant* c);
	gchar* (*get_error_domain_comment) (BalaGIRWriter* self, BalaErrorDomain* edomain);
	gchar* (*get_field_comment) (BalaGIRWriter* self, BalaField* f);
	gchar* (*get_delegate_comment) (BalaGIRWriter* self, BalaDelegate* cb);
	gchar* (*get_method_comment) (BalaGIRWriter* self, BalaMethod* m);
	gchar* (*get_property_comment) (BalaGIRWriter* self, BalaProperty* prop);
	gchar* (*get_delegate_return_comment) (BalaGIRWriter* self, BalaDelegate* cb);
	gchar* (*get_signal_return_comment) (BalaGIRWriter* self, BalaSignal* sig);
	gchar* (*get_method_return_comment) (BalaGIRWriter* self, BalaMethod* m);
	gchar* (*get_signal_comment) (BalaGIRWriter* self, BalaSignal* sig);
	gchar* (*get_parameter_comment) (BalaGIRWriter* self, BalaParameter* param);
};

struct _BalaGLibValue {
	BalaTargetValue parent_instance;
	BalaCCodeExpression* cvalue;
	gboolean lvalue;
	gboolean non_null;
	gchar* ctype;
	BalaList* array_length_cvalues;
	BalaCCodeExpression* array_size_cvalue;
	gboolean array_null_terminated;
	BalaCCodeExpression* array_length_cexpr;
	BalaCCodeExpression* delegate_target_cvalue;
	BalaCCodeExpression* delegate_target_destroy_notify_cvalue;
	BalaGLibValuePrivate * priv;
};

struct _BalaGLibValueClass {
	BalaTargetValueClass parent_class;
};

struct _BalaInterfaceRegisterFunction {
	BalaTypeRegisterFunction parent_instance;
	BalaInterfaceRegisterFunctionPrivate * priv;
};

struct _BalaInterfaceRegisterFunctionClass {
	BalaTypeRegisterFunctionClass parent_class;
};

struct _BalaStructRegisterFunction {
	BalaTypeRegisterFunction parent_instance;
	BalaStructRegisterFunctionPrivate * priv;
};

struct _BalaStructRegisterFunctionClass {
	BalaTypeRegisterFunctionClass parent_class;
};

gchar* bala_get_ccode_name (BalaCodeNode* node);
gchar* bala_get_ccode_const_name (BalaCodeNode* node);
gchar* bala_get_ccode_type_name (BalaObjectTypeSymbol* sym);
gchar* bala_get_ccode_type_cast_function (BalaObjectTypeSymbol* sym);
gchar* bala_get_ccode_type_get_function (BalaObjectTypeSymbol* sym);
gchar* bala_get_ccode_class_get_private_function (BalaClass* cl);
gchar* bala_get_ccode_class_type_function (BalaClass* cl);
gchar* bala_get_ccode_lower_case_name (BalaCodeNode* node,
                                       const gchar* infix);
gchar* bala_get_ccode_upper_case_name (BalaSymbol* sym,
                                       const gchar* infix);
gchar* bala_get_ccode_header_filenames (BalaSymbol* sym);
gchar* bala_get_ccode_feature_test_macros (BalaSymbol* sym);
gchar* bala_get_ccode_prefix (BalaSymbol* sym);
gchar* bala_get_ccode_lower_case_prefix (BalaSymbol* sym);
gchar* bala_get_ccode_lower_case_suffix (BalaSymbol* sym);
gchar* bala_get_ccode_ref_function (BalaTypeSymbol* sym);
gchar* bala_get_ccode_quark_name (BalaErrorDomain* edomain);
gboolean bala_is_reference_counting (BalaTypeSymbol* sym);
gboolean bala_is_ref_function_void (BalaDataType* type);
gboolean bala_is_free_function_address_of (BalaDataType* type);
gboolean bala_get_ccode_ref_function_void (BalaClass* cl);
gboolean bala_get_ccode_free_function_address_of (BalaClass* cl);
gchar* bala_get_ccode_unref_function (BalaObjectTypeSymbol* sym);
gchar* bala_get_ccode_ref_sink_function (BalaObjectTypeSymbol* sym);
gchar* bala_get_ccode_copy_function (BalaTypeSymbol* sym);
gchar* bala_get_ccode_destroy_function (BalaTypeSymbol* sym);
gchar* bala_get_ccode_dup_function (BalaTypeSymbol* sym);
gchar* bala_get_ccode_free_function (BalaTypeSymbol* sym);
gboolean bala_get_ccode_is_gboxed (BalaTypeSymbol* sym);
gboolean bala_get_ccode_finish_instance (BalaMethod* m);
gchar* bala_get_ccode_type_id (BalaCodeNode* node);
gchar* bala_get_ccode_type_function (BalaTypeSymbol* sym);
gchar* bala_get_ccode_marshaller_type_name (BalaCodeNode* node);
gchar* bala_get_ccode_get_value_function (BalaCodeNode* sym);
gchar* bala_get_ccode_set_value_function (BalaCodeNode* sym);
gchar* bala_get_ccode_take_value_function (BalaCodeNode* sym);
gchar* bala_get_ccode_param_spec_function (BalaCodeNode* sym);
gchar* bala_get_ccode_type_check_function (BalaTypeSymbol* sym);
gchar* bala_get_ccode_class_type_check_function (BalaClass* cl);
gchar* bala_get_ccode_default_value (BalaTypeSymbol* sym);
gchar* bala_get_ccode_default_value_on_error (BalaTypeSymbol* sym);
gboolean bala_get_ccode_has_copy_function (BalaStruct* st);
gboolean bala_get_ccode_has_destroy_function (BalaStruct* st);
gdouble bala_get_ccode_instance_pos (BalaCodeNode* node);
gdouble bala_get_ccode_error_pos (BalaCallable* c);
gboolean bala_get_ccode_array_length (BalaCodeNode* node);
gchar* bala_get_ccode_array_length_type (BalaCodeNode* node);
gboolean bala_get_ccode_array_null_terminated (BalaCodeNode* node);
gchar* bala_get_ccode_array_length_name (BalaCodeNode* node);
gchar* bala_get_ccode_array_length_expr (BalaCodeNode* node);
gdouble bala_get_ccode_array_length_pos (BalaCodeNode* node);
gdouble bala_get_ccode_delegate_target_pos (BalaCodeNode* node);
gdouble bala_get_ccode_destroy_notify_pos (BalaCodeNode* node);
gboolean bala_get_ccode_delegate_target (BalaCodeNode* node);
gchar* bala_get_ccode_delegate_target_name (BalaVariable* variable);
gchar* bala_get_ccode_delegate_target_destroy_notify_name (BalaVariable* variable);
gdouble bala_get_ccode_pos (BalaParameter* param);
gchar* bala_get_ccode_type (BalaCodeNode* node);
gboolean bala_get_ccode_simple_generics (BalaMethod* m);
gchar* bala_get_ccode_real_name (BalaSymbol* sym);
gchar* bala_get_ccode_constructv_name (BalaCreationMethod* m);
gchar* bala_get_ccode_vfunc_name (BalaMethod* m);
gdouble bala_get_ccode_async_result_pos (BalaMethod* m);
gchar* bala_get_ccode_finish_name (BalaMethod* m);
gchar* bala_get_ccode_finish_vfunc_name (BalaMethod* m);
gchar* bala_get_ccode_finish_real_name (BalaMethod* m);
gboolean bala_get_ccode_no_accessor_method (BalaProperty* p);
gboolean bala_get_ccode_concrete_accessor (BalaProperty* p);
gboolean bala_get_ccode_has_emitter (BalaSignal* sig);
gboolean bala_get_ccode_has_type_id (BalaTypeSymbol* sym);
gboolean bala_get_ccode_has_new_function (BalaMethod* m);
gboolean bala_get_ccode_has_generic_type_parameter (BalaMethod* m);
gdouble bala_get_ccode_generic_type_pos (BalaMethod* m);
gboolean bala_get_ccode_no_wrapper (BalaMethod* m);
gchar* bala_get_ccode_sentinel (BalaMethod* m);
GType bala_ccode_base_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaCCodeBaseModule, bala_code_visitor_unref)
gpointer bala_ccode_base_module_emit_context_ref (gpointer instance);
void bala_ccode_base_module_emit_context_unref (gpointer instance);
GParamSpec* bala_ccode_base_module_param_spec_emit_context (const gchar* name,
                                                            const gchar* nick,
                                                            const gchar* blurb,
                                                            GType object_type,
                                                            GParamFlags flags);
void bala_ccode_base_module_value_set_emit_context (GValue* value,
                                                    gpointer v_object);
void bala_ccode_base_module_value_take_emit_context (GValue* value,
                                                     gpointer v_object);
gpointer bala_ccode_base_module_value_get_emit_context (const GValue* value);
GType bala_ccode_base_module_emit_context_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaCCodeBaseModuleEmitContext, bala_ccode_base_module_emit_context_unref)
GType bala_ccode_struct_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaCCodeStructModule, bala_code_visitor_unref)
GType bala_ccode_method_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaCCodeMethodModule, bala_code_visitor_unref)
GType bala_ccode_control_flow_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaCCodeControlFlowModule, bala_code_visitor_unref)
GType bala_ccode_member_access_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaCCodeMemberAccessModule, bala_code_visitor_unref)
GType bala_ccode_assignment_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaCCodeAssignmentModule, bala_code_visitor_unref)
GType bala_ccode_method_call_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaCCodeMethodCallModule, bala_code_visitor_unref)
GType bala_ccode_array_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaCCodeArrayModule, bala_code_visitor_unref)
BalaCCodeArrayModule* bala_ccode_array_module_new (void);
BalaCCodeArrayModule* bala_ccode_array_module_construct (GType object_type);
BalaCCodeAssignmentModule* bala_ccode_assignment_module_new (void);
BalaCCodeAssignmentModule* bala_ccode_assignment_module_construct (GType object_type);
GType bala_ccode_attribute_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaCCodeAttribute, bala_attribute_cache_unref)
const gchar* bala_ccode_attribute_get_name (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_const_name (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_type_name (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_feature_test_macros (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_header_filenames (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_prefix (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_lower_case_prefix (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_lower_case_suffix (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_ref_function (BalaCCodeAttribute* self);
gboolean bala_ccode_attribute_get_ref_function_void (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_unref_function (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_ref_sink_function (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_copy_function (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_destroy_function (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_dup_function (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_free_function (BalaCCodeAttribute* self);
gboolean bala_ccode_attribute_get_free_function_address_of (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_ctype (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_type_id (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_marshaller_type_name (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_get_value_function (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_set_value_function (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_take_value_function (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_param_spec_function (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_default_value (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_default_value_on_error (BalaCCodeAttribute* self);
gdouble bala_ccode_attribute_get_pos (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_real_name (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_vfunc_name (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_finish_name (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_finish_vfunc_name (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_finish_real_name (BalaCCodeAttribute* self);
gboolean bala_ccode_attribute_get_finish_instance (BalaCCodeAttribute* self);
gboolean bala_ccode_attribute_get_delegate_target (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_delegate_target_name (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_delegate_target_destroy_notify_name (BalaCCodeAttribute* self);
gboolean bala_ccode_attribute_get_array_length (BalaCCodeAttribute* self);
gboolean bala_ccode_attribute_get_array_null_terminated (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_array_length_type (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_sentinel (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_array_length_name (BalaCCodeAttribute* self);
const gchar* bala_ccode_attribute_get_array_length_expr (BalaCCodeAttribute* self);
BalaCCodeAttribute* bala_ccode_attribute_new (BalaCodeNode* node);
BalaCCodeAttribute* bala_ccode_attribute_construct (GType object_type,
                                                    BalaCodeNode* node);
BalaCodeContext* bala_ccode_base_module_get_context (BalaCCodeBaseModule* self);
void bala_ccode_base_module_set_context (BalaCCodeBaseModule* self,
                                         BalaCodeContext* value);
BalaSymbol* bala_ccode_base_module_get_current_symbol (BalaCCodeBaseModule* self);
BalaTryStatement* bala_ccode_base_module_get_current_try (BalaCCodeBaseModule* self);
void bala_ccode_base_module_set_current_try (BalaCCodeBaseModule* self,
                                             BalaTryStatement* value);
gint bala_ccode_base_module_get_current_try_id (BalaCCodeBaseModule* self);
void bala_ccode_base_module_set_current_try_id (BalaCCodeBaseModule* self,
                                                gint value);
gint bala_ccode_base_module_get_next_try_id (BalaCCodeBaseModule* self);
void bala_ccode_base_module_set_next_try_id (BalaCCodeBaseModule* self,
                                             gint value);
BalaCatchClause* bala_ccode_base_module_get_current_catch (BalaCCodeBaseModule* self);
void bala_ccode_base_module_set_current_catch (BalaCCodeBaseModule* self,
                                               BalaCatchClause* value);
gint bala_ccode_base_module_get_current_inner_error_id (BalaCCodeBaseModule* self);
void bala_ccode_base_module_set_current_inner_error_id (BalaCCodeBaseModule* self,
                                                        gint value);
gboolean bala_ccode_base_module_get_is_in_method_precondition (BalaCCodeBaseModule* self);
void bala_ccode_base_module_set_is_in_method_precondition (BalaCCodeBaseModule* self,
                                                           gboolean value);
BalaTypeSymbol* bala_ccode_base_module_get_current_type_symbol (BalaCCodeBaseModule* self);
BalaClass* bala_ccode_base_module_get_current_class (BalaCCodeBaseModule* self);
BalaMethod* bala_ccode_base_module_get_current_method (BalaCCodeBaseModule* self);
BalaPropertyAccessor* bala_ccode_base_module_get_current_property_accessor (BalaCCodeBaseModule* self);
BalaConstructor* bala_ccode_base_module_get_current_constructor (BalaCCodeBaseModule* self);
BalaDestructor* bala_ccode_base_module_get_current_destructor (BalaCCodeBaseModule* self);
BalaDataType* bala_ccode_base_module_get_current_return_type (BalaCCodeBaseModule* self);
gboolean bala_ccode_base_module_is_in_coroutine (BalaCCodeBaseModule* self);
gboolean bala_ccode_base_module_is_in_constructor (BalaCCodeBaseModule* self);
gboolean bala_ccode_base_module_is_in_destructor (BalaCCodeBaseModule* self);
BalaBlock* bala_ccode_base_module_get_current_closure_block (BalaCCodeBaseModule* self);
BalaBlock* bala_ccode_base_module_next_closure_block (BalaCCodeBaseModule* self,
                                                      BalaSymbol* sym);
BalaCCodeFunction* bala_ccode_base_module_get_ccode (BalaCCodeBaseModule* self);
BalaArrayList* bala_ccode_base_module_get_temp_ref_values (BalaCCodeBaseModule* self);
extern BalaSet* bala_ccode_base_module_reserved_identifiers;
gint bala_ccode_base_module_get_next_temp_var_id (BalaCCodeBaseModule* self);
void bala_ccode_base_module_set_next_temp_var_id (BalaCCodeBaseModule* self,
                                                  gint value);
gboolean bala_ccode_base_module_get_in_creation_method (BalaCCodeBaseModule* self);
gboolean bala_ccode_base_module_get_current_method_inner_error (BalaCCodeBaseModule* self);
void bala_ccode_base_module_set_current_method_inner_error (BalaCCodeBaseModule* self,
                                                            gboolean value);
gboolean bala_ccode_base_module_get_current_method_return (BalaCCodeBaseModule* self);
void bala_ccode_base_module_set_current_method_return (BalaCCodeBaseModule* self,
                                                       gboolean value);
BalaMap* bala_ccode_base_module_get_variable_name_map (BalaCCodeBaseModule* self);
extern gint bala_ccode_base_module_ccode_attribute_cache_index;
BalaCCodeBaseModule* bala_ccode_base_module_construct (GType object_type);
void bala_ccode_base_module_push_context (BalaCCodeBaseModule* self,
                                          BalaCCodeBaseModuleEmitContext* emit_context);
void bala_ccode_base_module_pop_context (BalaCCodeBaseModule* self);
void bala_ccode_base_module_push_line (BalaCCodeBaseModule* self,
                                       BalaSourceReference* source_reference);
void bala_ccode_base_module_pop_line (BalaCCodeBaseModule* self);
void bala_ccode_base_module_push_function (BalaCCodeBaseModule* self,
                                           BalaCCodeFunction* func);
void bala_ccode_base_module_pop_function (BalaCCodeBaseModule* self);
gboolean bala_ccode_base_module_add_symbol_declaration (BalaCCodeBaseModule* self,
                                                        BalaCCodeFile* decl_space,
                                                        BalaSymbol* sym,
                                                        const gchar* name);
void bala_ccode_base_module_append_bala_array_free (BalaCCodeBaseModule* self);
void bala_ccode_base_module_append_bala_array_move (BalaCCodeBaseModule* self);
void bala_ccode_base_module_append_bala_array_length (BalaCCodeBaseModule* self);
void bala_ccode_base_module_append_params_array (BalaCCodeBaseModule* self,
                                                 BalaMethod* m);
void bala_ccode_base_module_append_bala_clear_mutex (BalaCCodeBaseModule* self,
                                                     const gchar* typename,
                                                     const gchar* funcprefix);
gboolean bala_ccode_base_module_generate_enum_declaration (BalaCCodeBaseModule* self,
                                                           BalaEnum* en,
                                                           BalaCCodeFile* decl_space);
void bala_ccode_base_module_visit_member (BalaCCodeBaseModule* self,
                                          BalaSymbol* m);
void bala_ccode_base_module_generate_constant_declaration (BalaCCodeBaseModule* self,
                                                           BalaConstant* c,
                                                           BalaCCodeFile* decl_space,
                                                           gboolean definition);
void bala_ccode_base_module_append_field (BalaCCodeBaseModule* self,
                                          BalaCCodeStruct* ccode_struct,
                                          BalaField* f,
                                          BalaCCodeFile* decl_space);
void bala_ccode_base_module_generate_field_declaration (BalaCCodeBaseModule* self,
                                                        BalaField* f,
                                                        BalaCCodeFile* decl_space);
gboolean bala_ccode_base_module_is_constant_ccode_expression (BalaCCodeExpression* cexpr);
gboolean bala_ccode_base_module_is_constant_ccode (BalaCodeNode* expr);
gboolean bala_ccode_base_module_is_pure_ccode_expression (BalaCCodeExpression* cexpr);
void bala_ccode_base_module_generate_type_declaration (BalaCCodeBaseModule* self,
                                                       BalaDataType* type,
                                                       BalaCCodeFile* decl_space);
void bala_ccode_base_module_generate_class_struct_declaration (BalaCCodeBaseModule* self,
                                                               BalaClass* cl,
                                                               BalaCCodeFile* decl_space);
void bala_ccode_base_module_generate_struct_declaration (BalaCCodeBaseModule* self,
                                                         BalaStruct* st,
                                                         BalaCCodeFile* decl_space);
void bala_ccode_base_module_generate_delegate_declaration (BalaCCodeBaseModule* self,
                                                           BalaDelegate* d,
                                                           BalaCCodeFile* decl_space);
void bala_ccode_base_module_generate_cparameters (BalaCCodeBaseModule* self,
                                                  BalaMethod* m,
                                                  BalaCCodeFile* decl_space,
                                                  BalaMap* cparam_map,
                                                  BalaCCodeFunction* func,
                                                  BalaCCodeFunctionDeclarator* vdeclarator,
                                                  BalaMap* carg_map,
                                                  BalaCCodeFunctionCall* vcall,
                                                  gint direction);
void bala_ccode_base_module_generate_property_accessor_declaration (BalaCCodeBaseModule* self,
                                                                    BalaPropertyAccessor* acc,
                                                                    BalaCCodeFile* decl_space);
gint bala_ccode_base_module_get_block_id (BalaCCodeBaseModule* self,
                                          BalaBlock* b);
gboolean bala_ccode_base_module_no_implicit_copy (BalaCCodeBaseModule* self,
                                                  BalaDataType* type);
BalaCCodeExpression* bala_ccode_base_module_get_cexpression (BalaCCodeBaseModule* self,
                                                             const gchar* name);
BalaCCodeExpression* bala_ccode_base_module_get_local_cexpression (BalaCCodeBaseModule* self,
                                                                   BalaLocalVariable* local);
BalaCCodeExpression* bala_ccode_base_module_get_parameter_cexpression (BalaCCodeBaseModule* self,
                                                                       BalaParameter* param);
BalaCCodeExpression* bala_ccode_base_module_get_variable_cexpression (BalaCCodeBaseModule* self,
                                                                      const gchar* name);
BalaCCodeExpression* bala_ccode_base_module_get_this_cexpression (BalaCCodeBaseModule* self);
BalaCCodeExpression* bala_ccode_base_module_get_this_interface_cexpression (BalaCCodeBaseModule* self,
                                                                            BalaInterface* iface);
BalaCCodeExpression* bala_ccode_base_module_get_inner_error_cexpression (BalaCCodeBaseModule* self);
gchar* bala_ccode_base_module_get_local_cname (BalaCCodeBaseModule* self,
                                               BalaLocalVariable* local);
gchar* bala_ccode_base_module_get_variable_cname (BalaCCodeBaseModule* self,
                                                  const gchar* name);
gboolean bala_ccode_base_module_is_simple_struct_creation (BalaCCodeBaseModule* self,
                                                           BalaVariable* variable,
                                                           BalaExpression* expr);
BalaTargetValue* bala_ccode_base_module_create_temp_value (BalaCCodeBaseModule* self,
                                                           BalaDataType* type,
                                                           gboolean init,
                                                           BalaCodeNode* node_reference,
                                                           gboolean* value_owned);
BalaTargetValue* bala_ccode_base_module_load_temp_value (BalaCCodeBaseModule* self,
                                                         BalaTargetValue* lvalue);
BalaTargetValue* bala_ccode_base_module_store_temp_value (BalaCCodeBaseModule* self,
                                                          BalaTargetValue* initializer,
                                                          BalaCodeNode* node_reference,
                                                          gboolean* value_owned);
BalaLocalVariable* bala_ccode_base_module_get_temp_variable (BalaCCodeBaseModule* self,
                                                             BalaDataType* type,
                                                             gboolean value_owned,
                                                             BalaCodeNode* node_reference,
                                                             gboolean init);
BalaCCodeExpression* bala_ccode_base_module_get_type_id_expression (BalaCCodeBaseModule* self,
                                                                    BalaDataType* type,
                                                                    gboolean is_chainup);
BalaCCodeExpression* bala_ccode_base_module_get_dup_func_expression (BalaCCodeBaseModule* self,
                                                                     BalaDataType* type,
                                                                     BalaSourceReference* source_reference,
                                                                     gboolean is_chainup);
gchar* bala_ccode_base_module_generate_dup_func_wrapper (BalaCCodeBaseModule* self,
                                                         BalaDataType* type);
gchar* bala_ccode_base_module_generate_free_function_address_of_wrapper (BalaCCodeBaseModule* self,
                                                                         BalaDataType* type);
gchar* bala_ccode_base_module_generate_destroy_function_content_of_wrapper (BalaCCodeBaseModule* self,
                                                                            BalaDataType* type);
gchar* bala_ccode_base_module_generate_free_func_wrapper (BalaCCodeBaseModule* self,
                                                          BalaDataType* type);
BalaCCodeExpression* bala_ccode_base_module_get_destroy0_func_expression (BalaCCodeBaseModule* self,
                                                                          BalaDataType* type,
                                                                          gboolean is_chainup);
BalaCCodeExpression* bala_ccode_base_module_get_destroy_func_expression (BalaCCodeBaseModule* self,
                                                                         BalaDataType* type,
                                                                         gboolean is_chainup);
gchar* bala_ccode_base_module_append_struct_array_destroy (BalaCCodeBaseModule* self,
                                                           BalaStruct* st);
gchar* bala_ccode_base_module_append_struct_array_free (BalaCCodeBaseModule* self,
                                                        BalaStruct* st);
BalaCCodeExpression* bala_ccode_base_module_destroy_local (BalaCCodeBaseModule* self,
                                                           BalaLocalVariable* local);
BalaCCodeExpression* bala_ccode_base_module_destroy_parameter (BalaCCodeBaseModule* self,
                                                               BalaParameter* param);
BalaCCodeExpression* bala_ccode_base_module_destroy_field (BalaCCodeBaseModule* self,
                                                           BalaField* field,
                                                           BalaTargetValue* instance);
BalaCCodeExpression* bala_ccode_base_module_destroy_value (BalaCCodeBaseModule* self,
                                                           BalaTargetValue* value,
                                                           gboolean is_macro_definition);
void bala_ccode_base_module_emit_temp_var (BalaCCodeBaseModule* self,
                                           BalaLocalVariable* local,
                                           gboolean on_error);
void bala_ccode_base_module_append_scope_free (BalaCCodeBaseModule* self,
                                               BalaSymbol* sym,
                                               BalaCodeNode* stop_at);
void bala_ccode_base_module_append_local_free (BalaCCodeBaseModule* self,
                                               BalaSymbol* sym,
                                               BalaStatement* jump_stmt,
                                               BalaCodeNode* stop_at);
void bala_ccode_base_module_append_out_param_free (BalaCCodeBaseModule* self,
                                                   BalaMethod* m);
gboolean bala_ccode_base_module_variable_accessible_in_finally (BalaCCodeBaseModule* self,
                                                                BalaLocalVariable* local);
void bala_ccode_base_module_return_out_parameter (BalaCCodeBaseModule* self,
                                                  BalaParameter* param);
gchar* bala_ccode_base_module_get_symbol_lock_name (BalaCCodeBaseModule* self,
                                                    const gchar* symname);
BalaTargetValue* bala_ccode_base_module_get_local_cvalue (BalaCCodeBaseModule* self,
                                                          BalaLocalVariable* local);
BalaTargetValue* bala_ccode_base_module_get_parameter_cvalue (BalaCCodeBaseModule* self,
                                                              BalaParameter* param);
BalaTargetValue* bala_ccode_base_module_get_field_cvalue (BalaCCodeBaseModule* self,
                                                          BalaField* field,
                                                          BalaTargetValue* instance);
BalaTargetValue* bala_ccode_base_module_load_variable (BalaCCodeBaseModule* self,
                                                       BalaVariable* variable,
                                                       BalaTargetValue* value,
                                                       BalaExpression* expr);
BalaTargetValue* bala_ccode_base_module_load_this_parameter (BalaCCodeBaseModule* self,
                                                             BalaTypeSymbol* sym);
void bala_ccode_base_module_store_value (BalaCCodeBaseModule* self,
                                         BalaTargetValue* lvalue,
                                         BalaTargetValue* value,
                                         BalaSourceReference* source_reference);
gchar* bala_ccode_base_module_get_delegate_target_cname (BalaCCodeBaseModule* self,
                                                         const gchar* delegate_cname);
BalaCCodeExpression* bala_ccode_base_module_get_delegate_target_cexpression (BalaCCodeBaseModule* self,
                                                                             BalaExpression* delegate_expr,
                                                                             BalaCCodeExpression* * delegate_target_destroy_notify);
BalaCCodeExpression* bala_ccode_base_module_get_delegate_target_cvalue (BalaCCodeBaseModule* self,
                                                                        BalaTargetValue* value);
BalaCCodeExpression* bala_ccode_base_module_get_delegate_target_destroy_notify_cvalue (BalaCCodeBaseModule* self,
                                                                                       BalaTargetValue* value);
gchar* bala_ccode_base_module_get_delegate_target_destroy_notify_cname (BalaCCodeBaseModule* self,
                                                                        const gchar* delegate_cname);
gboolean bala_ccode_base_module_requires_copy (BalaDataType* type);
gboolean bala_ccode_base_module_requires_destroy (BalaDataType* type);
BalaTargetValue* bala_ccode_base_module_copy_value (BalaCCodeBaseModule* self,
                                                    BalaTargetValue* value,
                                                    BalaCodeNode* node);
void bala_ccode_base_module_generate_class_declaration (BalaCCodeBaseModule* self,
                                                        BalaClass* cl,
                                                        BalaCCodeFile* decl_space);
void bala_ccode_base_module_generate_interface_declaration (BalaCCodeBaseModule* self,
                                                            BalaInterface* iface,
                                                            BalaCCodeFile* decl_space);
gboolean bala_ccode_base_module_generate_method_declaration (BalaCCodeBaseModule* self,
                                                             BalaMethod* m,
                                                             BalaCCodeFile* decl_space);
void bala_ccode_base_module_generate_error_domain_declaration (BalaCCodeBaseModule* self,
                                                               BalaErrorDomain* edomain,
                                                               BalaCCodeFile* decl_space);
void bala_ccode_base_module_add_generic_type_arguments (BalaCCodeBaseModule* self,
                                                        BalaMap* arg_map,
                                                        BalaList* type_args,
                                                        BalaCodeNode* expr,
                                                        gboolean is_chainup,
                                                        BalaList* type_parameters);
BalaCCodeExpression* bala_ccode_base_module_handle_struct_argument (BalaCCodeBaseModule* self,
                                                                    BalaParameter* param,
                                                                    BalaExpression* arg,
                                                                    BalaCCodeExpression* cexpr);
BalaCCodeExpression* bala_ccode_base_module_deserialize_expression (BalaCCodeBaseModule* self,
                                                                    BalaDataType* type,
                                                                    BalaCCodeExpression* variant_expr,
                                                                    BalaCCodeExpression* expr,
                                                                    BalaCCodeExpression* error_expr,
                                                                    gboolean* may_fail);
BalaCCodeExpression* bala_ccode_base_module_serialize_expression (BalaCCodeBaseModule* self,
                                                                  BalaDataType* type,
                                                                  BalaCCodeExpression* expr);
BalaCCodeExpression* bala_ccode_base_module_create_type_check (BalaCCodeBaseModule* self,
                                                               BalaCCodeNode* ccodenode,
                                                               BalaDataType* type);
BalaCCodeExpression* bala_ccode_base_module_convert_from_generic_pointer (BalaCCodeBaseModule* self,
                                                                          BalaCCodeExpression* cexpr,
                                                                          BalaDataType* actual_type);
BalaCCodeExpression* bala_ccode_base_module_convert_to_generic_pointer (BalaCCodeBaseModule* self,
                                                                        BalaCCodeExpression* cexpr,
                                                                        BalaDataType* actual_type);
BalaTargetValue* bala_ccode_base_module_transform_value (BalaCCodeBaseModule* self,
                                                         BalaTargetValue* value,
                                                         BalaDataType* target_type,
                                                         BalaCodeNode* node);
BalaCCodeExpression* bala_ccode_base_module_get_implicit_cast_expression (BalaCCodeBaseModule* self,
                                                                          BalaCCodeExpression* source_cexpr,
                                                                          BalaDataType* expression_type,
                                                                          BalaDataType* target_type,
                                                                          BalaCodeNode* node);
void bala_ccode_base_module_store_property (BalaCCodeBaseModule* self,
                                            BalaProperty* prop,
                                            BalaExpression* instance,
                                            BalaTargetValue* value);
gboolean bala_ccode_base_module_add_wrapper (BalaCCodeBaseModule* self,
                                             const gchar* wrapper_name);
gboolean bala_ccode_base_module_add_generated_external_symbol (BalaCCodeBaseModule* self,
                                                               BalaSymbol* external_symbol);
BalaDataType* bala_ccode_base_module_get_callable_creturn_type (BalaCallable* c);
BalaCCodeExpression* bala_ccode_base_module_default_value_for_type (BalaCCodeBaseModule* self,
                                                                    BalaDataType* type,
                                                                    gboolean initializer_expression,
                                                                    gboolean on_error);
void bala_ccode_base_module_create_type_check_statement (BalaCCodeBaseModule* self,
                                                         BalaCodeNode* method_node,
                                                         BalaDataType* ret_type,
                                                         BalaTypeSymbol* t,
                                                         gboolean non_null,
                                                         const gchar* var_name);
gint bala_ccode_base_module_get_param_pos (BalaCCodeBaseModule* self,
                                           gdouble param_pos,
                                           gboolean ellipsis);
BalaCCodeExpression* bala_ccode_base_module_get_ccodenode (BalaCCodeBaseModule* self,
                                                           BalaExpression* node);
gboolean bala_ccode_base_module_is_lvalue_access_allowed (BalaCCodeBaseModule* self,
                                                          BalaDataType* type);
gboolean bala_ccode_base_module_requires_memset_init (BalaCCodeBaseModule* self,
                                                      BalaVariable* variable,
                                                      BalaCCodeExpression* * size);
BalaCCodeDeclaratorSuffix* bala_ccode_base_module_get_ccode_declarator_suffix (BalaCCodeBaseModule* self,
                                                                               BalaDataType* type);
BalaCCodeConstant* bala_ccode_base_module_get_signal_canonical_constant (BalaCCodeBaseModule* self,
                                                                         BalaSignal* sig,
                                                                         const gchar* detail);
BalaCCodeConstant* bala_ccode_base_module_get_property_canonical_cconstant (BalaCCodeBaseModule* self,
                                                                            BalaProperty* prop);
void bala_ccode_base_module_create_postcondition_statement (BalaCCodeBaseModule* self,
                                                            BalaExpression* postcondition);
BalaDataType* bala_ccode_base_module_get_this_type (BalaCCodeBaseModule* self);
BalaCCodeFunctionCall* bala_ccode_base_module_generate_instance_cast (BalaCCodeBaseModule* self,
                                                                      BalaCCodeExpression* expr,
                                                                      BalaTypeSymbol* type);
void bala_ccode_base_module_return_default_value (BalaCCodeBaseModule* self,
                                                  BalaDataType* return_type,
                                                  gboolean on_error);
void bala_ccode_base_module_generate_dynamic_method_wrapper (BalaCCodeBaseModule* self,
                                                             BalaDynamicMethod* method);
gboolean bala_ccode_base_module_method_has_wrapper (BalaCCodeBaseModule* self,
                                                    BalaMethod* method);
BalaCCodeExpression* bala_ccode_base_module_get_param_spec_cexpression (BalaCCodeBaseModule* self,
                                                                        BalaProperty* prop);
BalaCCodeExpression* bala_ccode_base_module_get_param_spec (BalaCCodeBaseModule* self,
                                                            BalaProperty* prop);
BalaCCodeExpression* bala_ccode_base_module_get_signal_creation (BalaCCodeBaseModule* self,
                                                                 BalaSignal* sig,
                                                                 BalaObjectTypeSymbol* type);
BalaCCodeExpression* bala_ccode_base_module_get_value_getter_function (BalaCCodeBaseModule* self,
                                                                       BalaDataType* type_reference);
BalaCCodeExpression* bala_ccode_base_module_get_value_setter_function (BalaCCodeBaseModule* self,
                                                                       BalaDataType* type_reference);
BalaCCodeExpression* bala_ccode_base_module_get_value_taker_function (BalaCCodeBaseModule* self,
                                                                      BalaDataType* type_reference);
void bala_ccode_base_module_register_dbus_info (BalaCCodeBaseModule* self,
                                                BalaCCodeBlock* block,
                                                BalaObjectTypeSymbol* bindable);
gchar* bala_ccode_base_module_get_dynamic_property_getter_cname (BalaCCodeBaseModule* self,
                                                                 BalaDynamicProperty* node);
gchar* bala_ccode_base_module_get_dynamic_property_setter_cname (BalaCCodeBaseModule* self,
                                                                 BalaDynamicProperty* node);
gchar* bala_ccode_base_module_get_dynamic_signal_cname (BalaCCodeBaseModule* self,
                                                        BalaDynamicSignal* node);
gchar* bala_ccode_base_module_get_dynamic_signal_connect_wrapper_name (BalaCCodeBaseModule* self,
                                                                       BalaDynamicSignal* node);
gchar* bala_ccode_base_module_get_dynamic_signal_connect_after_wrapper_name (BalaCCodeBaseModule* self,
                                                                             BalaDynamicSignal* node);
gchar* bala_ccode_base_module_get_dynamic_signal_disconnect_wrapper_name (BalaCCodeBaseModule* self,
                                                                          BalaDynamicSignal* node);
gchar* bala_ccode_base_module_get_array_length_cname (BalaCCodeBaseModule* self,
                                                      const gchar* array_cname,
                                                      gint dim);
gchar* bala_ccode_base_module_get_variable_array_length_cname (BalaCCodeBaseModule* self,
                                                               BalaVariable* variable,
                                                               gint dim);
BalaCCodeExpression* bala_ccode_base_module_get_array_length_cexpression (BalaCCodeBaseModule* self,
                                                                          BalaExpression* array_expr,
                                                                          gint dim);
BalaCCodeExpression* bala_ccode_base_module_get_array_length_cvalue (BalaCCodeBaseModule* self,
                                                                     BalaTargetValue* value,
                                                                     gint dim);
gchar* bala_ccode_base_module_get_array_size_cname (BalaCCodeBaseModule* self,
                                                    const gchar* array_cname);
void bala_ccode_base_module_add_simple_check (BalaCCodeBaseModule* self,
                                              BalaCodeNode* node,
                                              gboolean always_fails);
gchar* bala_ccode_base_module_generate_ready_function (BalaCCodeBaseModule* self,
                                                       BalaMethod* m);
BalaCCodeExpression* bala_ccode_base_module_get_boolean_cconstant (BalaCCodeBaseModule* self,
                                                                   gboolean b);
BalaCCodeBaseModuleEmitContext* bala_ccode_base_module_emit_context_new (BalaSymbol* symbol);
BalaCCodeBaseModuleEmitContext* bala_ccode_base_module_emit_context_construct (GType object_type,
                                                                               BalaSymbol* symbol);
void bala_ccode_base_module_emit_context_push_symbol (BalaCCodeBaseModuleEmitContext* self,
                                                      BalaSymbol* symbol);
void bala_ccode_base_module_emit_context_pop_symbol (BalaCCodeBaseModuleEmitContext* self);
gpointer bala_ccode_compiler_ref (gpointer instance);
void bala_ccode_compiler_unref (gpointer instance);
GParamSpec* bala_param_spec_ccode_compiler (const gchar* name,
                                            const gchar* nick,
                                            const gchar* blurb,
                                            GType object_type,
                                            GParamFlags flags);
void bala_value_set_ccode_compiler (GValue* value,
                                    gpointer v_object);
void bala_value_take_ccode_compiler (GValue* value,
                                     gpointer v_object);
gpointer bala_value_get_ccode_compiler (const GValue* value);
GType bala_ccode_compiler_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaCCodeCompiler, bala_ccode_compiler_unref)
BalaCCodeCompiler* bala_ccode_compiler_new (void);
BalaCCodeCompiler* bala_ccode_compiler_construct (GType object_type);
void bala_ccode_compiler_compile (BalaCCodeCompiler* self,
                                  BalaCodeContext* context,
                                  const gchar* cc_command,
                                  gchar** cc_options,
                                  gint cc_options_length1);
BalaCCodeControlFlowModule* bala_ccode_control_flow_module_construct (GType object_type);
GType bala_ccode_delegate_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaCCodeDelegateModule, bala_code_visitor_unref)
gchar* bala_ccode_delegate_module_generate_delegate_wrapper (BalaCCodeDelegateModule* self,
                                                             BalaMethod* m,
                                                             BalaDelegateType* dt,
                                                             BalaCodeNode* node);
BalaCCodeDelegateModule* bala_ccode_delegate_module_new (void);
BalaCCodeDelegateModule* bala_ccode_delegate_module_construct (GType object_type);
BalaCCodeMemberAccessModule* bala_ccode_member_access_module_construct (GType object_type);
BalaCCodeMethodCallModule* bala_ccode_method_call_module_new (void);
BalaCCodeMethodCallModule* bala_ccode_method_call_module_construct (GType object_type);
void bala_ccode_method_module_generate_method_result_declaration (BalaCCodeMethodModule* self,
                                                                  BalaMethod* m,
                                                                  BalaCCodeFile* decl_space,
                                                                  BalaCCodeFunction* cfunc,
                                                                  BalaMap* cparam_map,
                                                                  BalaMap* carg_map);
void bala_ccode_method_module_complete_async (BalaCCodeMethodModule* self);
BalaCCodeParameter* bala_ccode_method_module_generate_parameter (BalaCCodeMethodModule* self,
                                                                 BalaParameter* param,
                                                                 BalaCCodeFile* decl_space,
                                                                 BalaMap* cparam_map,
                                                                 BalaMap* carg_map);
void bala_ccode_method_module_generate_vfunc (BalaCCodeMethodModule* self,
                                              BalaMethod* m,
                                              BalaDataType* return_type,
                                              BalaMap* cparam_map,
                                              BalaMap* carg_map,
                                              const gchar* suffix,
                                              gint direction);
BalaCCodeMethodModule* bala_ccode_method_module_construct (GType object_type);
BalaCCodeStructModule* bala_ccode_struct_module_construct (GType object_type);
gpointer bala_typeregister_function_ref (gpointer instance);
void bala_typeregister_function_unref (gpointer instance);
GParamSpec* bala_param_spec_typeregister_function (const gchar* name,
                                                   const gchar* nick,
                                                   const gchar* blurb,
                                                   GType object_type,
                                                   GParamFlags flags);
void bala_value_set_typeregister_function (GValue* value,
                                           gpointer v_object);
void bala_value_take_typeregister_function (GValue* value,
                                            gpointer v_object);
gpointer bala_value_get_typeregister_function (const GValue* value);
GType bala_typeregister_function_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaTypeRegisterFunction, bala_typeregister_function_unref)
GType bala_class_register_function_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaClassRegisterFunction, bala_typeregister_function_unref)
BalaClass* bala_class_register_function_get_class_reference (BalaClassRegisterFunction* self);
void bala_class_register_function_set_class_reference (BalaClassRegisterFunction* self,
                                                       BalaClass* value);
BalaClassRegisterFunction* bala_class_register_function_new (BalaClass* cl);
BalaClassRegisterFunction* bala_class_register_function_construct (GType object_type,
                                                                   BalaClass* cl);
GType bala_ctype_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaCType, bala_code_node_unref)
const gchar* bala_ctype_get_ctype_name (BalaCType* self);
void bala_ctype_set_ctype_name (BalaCType* self,
                                const gchar* value);
const gchar* bala_ctype_get_cdefault_value (BalaCType* self);
void bala_ctype_set_cdefault_value (BalaCType* self,
                                    const gchar* value);
BalaCType* bala_ctype_new (const gchar* ctype_name,
                           const gchar* cdefault_value);
BalaCType* bala_ctype_construct (GType object_type,
                                 const gchar* ctype_name,
                                 const gchar* cdefault_value);
GType bala_enum_register_function_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaEnumRegisterFunction, bala_typeregister_function_unref)
BalaEnum* bala_enum_register_function_get_enum_reference (BalaEnumRegisterFunction* self);
void bala_enum_register_function_set_enum_reference (BalaEnumRegisterFunction* self,
                                                     BalaEnum* value);
BalaEnumRegisterFunction* bala_enum_register_function_new (BalaEnum* en);
BalaEnumRegisterFunction* bala_enum_register_function_construct (GType object_type,
                                                                 BalaEnum* en);
GType bala_gerror_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaGErrorModule, bala_code_visitor_unref)
GType bala_gtype_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaGTypeModule, bala_code_visitor_unref)
GType bala_gobject_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaGObjectModule, bala_code_visitor_unref)
GType bala_gsignal_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaGSignalModule, bala_code_visitor_unref)
GType bala_gtk_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaGtkModule, bala_code_visitor_unref)
GType bala_gasync_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaGAsyncModule, bala_code_visitor_unref)
void bala_gasync_module_append_struct (BalaGAsyncModule* self,
                                       BalaCCodeStruct* structure);
gchar* bala_gasync_module_generate_async_callback_wrapper (BalaGAsyncModule* self);
BalaGAsyncModule* bala_gasync_module_new (void);
BalaGAsyncModule* bala_gasync_module_construct (GType object_type);
GType bala_gvalue_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaGValueModule, bala_code_visitor_unref)
GType bala_gvariant_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaGVariantModule, bala_code_visitor_unref)
GType bala_gd_bus_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaGDBusModule, bala_code_visitor_unref)
GType bala_gd_bus_client_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaGDBusClientModule, bala_code_visitor_unref)
BalaCCodeConstant* bala_gd_bus_client_module_get_dbus_timeout (BalaGDBusClientModule* self,
                                                               BalaSymbol* symbol);
BalaGDBusClientModule* bala_gd_bus_client_module_new (void);
BalaGDBusClientModule* bala_gd_bus_client_module_construct (GType object_type);
gchar* bala_gd_bus_module_get_dbus_name (BalaTypeSymbol* symbol);
gchar* bala_gd_bus_module_get_dbus_name_for_member (BalaSymbol* symbol);
gint bala_gd_bus_module_get_dbus_timeout_for_member (BalaSymbol* symbol);
gboolean bala_gd_bus_module_is_dbus_visible (BalaCodeNode* node);
gboolean bala_gd_bus_module_is_dbus_no_reply (BalaMethod* m);
gchar* bala_gd_bus_module_dbus_result_name (BalaMethod* m);
gboolean bala_gd_bus_module_dbus_method_uses_file_descriptor (BalaGDBusModule* self,
                                                              BalaMethod* method);
void bala_gd_bus_module_send_dbus_value (BalaGDBusModule* self,
                                         BalaDataType* type,
                                         BalaCCodeExpression* builder_expr,
                                         BalaCCodeExpression* expr,
                                         BalaSymbol* sym);
void bala_gd_bus_module_receive_dbus_value (BalaGDBusModule* self,
                                            BalaDataType* type,
                                            BalaCCodeExpression* message_expr,
                                            BalaCCodeExpression* iter_expr,
                                            BalaCCodeExpression* target_expr,
                                            BalaSymbol* sym,
                                            BalaCCodeExpression* error_expr,
                                            gboolean* may_fail);
BalaCCodeExpression* bala_gd_bus_module_get_interface_info (BalaGDBusModule* self,
                                                            BalaObjectTypeSymbol* sym);
BalaGDBusModule* bala_gd_bus_module_new (void);
BalaGDBusModule* bala_gd_bus_module_construct (GType object_type);
GType bala_gd_bus_server_module_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaGDBusServerModule, bala_code_visitor_unref)
BalaGDBusServerModule* bala_gd_bus_server_module_new (void);
BalaGDBusServerModule* bala_gd_bus_server_module_construct (GType object_type);
void bala_gerror_module_return_with_exception (BalaGErrorModule* self,
                                               BalaCCodeExpression* error_expr);
BalaGErrorModule* bala_gerror_module_new (void);
BalaGErrorModule* bala_gerror_module_construct (GType object_type);
GType bala_gir_writer_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaGIRWriter, bala_code_visitor_unref)
gchar* bala_gir_writer_get_interface_comment (BalaGIRWriter* self,
                                              BalaInterface* iface);
gchar* bala_gir_writer_get_struct_comment (BalaGIRWriter* self,
                                           BalaStruct* st);
gchar* bala_gir_writer_get_enum_comment (BalaGIRWriter* self,
                                         BalaEnum* en);
gchar* bala_gir_writer_get_class_comment (BalaGIRWriter* self,
                                          BalaClass* c);
gchar* bala_gir_writer_get_error_code_comment (BalaGIRWriter* self,
                                               BalaErrorCode* ecode);
gchar* bala_gir_writer_get_enum_value_comment (BalaGIRWriter* self,
                                               BalaEnumValue* ev);
gchar* bala_gir_writer_get_constant_comment (BalaGIRWriter* self,
                                             BalaConstant* c);
gchar* bala_gir_writer_get_error_domain_comment (BalaGIRWriter* self,
                                                 BalaErrorDomain* edomain);
gchar* bala_gir_writer_get_field_comment (BalaGIRWriter* self,
                                          BalaField* f);
gchar* bala_gir_writer_get_delegate_comment (BalaGIRWriter* self,
                                             BalaDelegate* cb);
gchar* bala_gir_writer_get_method_comment (BalaGIRWriter* self,
                                           BalaMethod* m);
gchar* bala_gir_writer_get_property_comment (BalaGIRWriter* self,
                                             BalaProperty* prop);
gchar* bala_gir_writer_get_delegate_return_comment (BalaGIRWriter* self,
                                                    BalaDelegate* cb);
gchar* bala_gir_writer_get_signal_return_comment (BalaGIRWriter* self,
                                                  BalaSignal* sig);
gchar* bala_gir_writer_get_method_return_comment (BalaGIRWriter* self,
                                                  BalaMethod* m);
gchar* bala_gir_writer_get_signal_comment (BalaGIRWriter* self,
                                           BalaSignal* sig);
gchar* bala_gir_writer_get_parameter_comment (BalaGIRWriter* self,
                                              BalaParameter* param);
void bala_gir_writer_write_includes (BalaGIRWriter* self);
void bala_gir_writer_write_file (BalaGIRWriter* self,
                                 BalaCodeContext* context,
                                 const gchar* directory,
                                 const gchar* gir_filename,
                                 const gchar* gir_namespace,
                                 const gchar* gir_version,
                                 const gchar* package,
                                 const gchar* gir_shared_library);
BalaGIRWriter* bala_gir_writer_new (void);
BalaGIRWriter* bala_gir_writer_construct (GType object_type);
GType bala_glib_value_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaGLibValue, bala_target_value_unref)
BalaGLibValue* bala_glib_value_new (BalaDataType* value_type,
                                    BalaCCodeExpression* cvalue,
                                    gboolean lvalue);
BalaGLibValue* bala_glib_value_construct (GType object_type,
                                          BalaDataType* value_type,
                                          BalaCCodeExpression* cvalue,
                                          gboolean lvalue);
void bala_glib_value_append_array_length_cvalue (BalaGLibValue* self,
                                                 BalaCCodeExpression* length_cvalue);
BalaGLibValue* bala_glib_value_copy (BalaGLibValue* self);
BalaCCodeExpression* bala_get_cvalue (BalaExpression* expr);
BalaCCodeExpression* bala_get_cvalue_ (BalaTargetValue* value);
void bala_set_cvalue (BalaExpression* expr,
                      BalaCCodeExpression* cvalue);
BalaCCodeExpression* bala_get_array_size_cvalue (BalaTargetValue* value);
void bala_set_array_size_cvalue (BalaTargetValue* value,
                                 BalaCCodeExpression* cvalue);
BalaCCodeExpression* bala_get_delegate_target (BalaExpression* expr);
void bala_set_delegate_target (BalaExpression* expr,
                               BalaCCodeExpression* delegate_target);
BalaCCodeExpression* bala_get_delegate_target_destroy_notify (BalaExpression* expr);
void bala_set_delegate_target_destroy_notify (BalaExpression* expr,
                                              BalaCCodeExpression* destroy_notify);
void bala_append_array_length (BalaExpression* expr,
                               BalaCCodeExpression* size);
BalaList* bala_get_array_lengths (BalaExpression* expr);
gboolean bala_get_lvalue (BalaTargetValue* value);
gboolean bala_get_non_null (BalaTargetValue* value);
const gchar* bala_get_ctype (BalaTargetValue* value);
gboolean bala_get_array_null_terminated (BalaTargetValue* value);
BalaCCodeExpression* bala_get_array_length_cexpr (BalaTargetValue* value);
BalaGObjectModule* bala_gobject_module_new (void);
BalaGObjectModule* bala_gobject_module_construct (GType object_type);
BalaGtkModule* bala_gtk_module_new (void);
BalaGtkModule* bala_gtk_module_construct (GType object_type);
BalaGSignalModule* bala_gsignal_module_new (void);
BalaGSignalModule* bala_gsignal_module_construct (GType object_type);
void bala_gtype_module_generate_virtual_method_declaration (BalaGTypeModule* self,
                                                            BalaMethod* m,
                                                            BalaCCodeFile* decl_space,
                                                            BalaCCodeStruct* type_struct);
void bala_gtype_module_generate_class_init (BalaGTypeModule* self,
                                            BalaClass* cl);
void bala_gtype_module_end_instance_init (BalaGTypeModule* self,
                                          BalaClass* cl);
BalaGTypeModule* bala_gtype_module_new (void);
BalaGTypeModule* bala_gtype_module_construct (GType object_type);
BalaGValueModule* bala_gvalue_module_new (void);
BalaGValueModule* bala_gvalue_module_construct (GType object_type);
gchar* bala_gvariant_module_get_dbus_signature (BalaSymbol* symbol);
BalaCCodeFunction* bala_gvariant_module_generate_enum_from_string_function_declaration (BalaGVariantModule* self,
                                                                                        BalaEnum* en);
BalaCCodeFunction* bala_gvariant_module_generate_enum_from_string_function (BalaGVariantModule* self,
                                                                            BalaEnum* en);
void bala_gvariant_module_read_expression (BalaGVariantModule* self,
                                           BalaDataType* type,
                                           BalaCCodeExpression* iter_expr,
                                           BalaCCodeExpression* target_expr,
                                           BalaSymbol* sym,
                                           BalaCCodeExpression* error_expr,
                                           gboolean* may_fail);
BalaCCodeFunction* bala_gvariant_module_generate_enum_to_string_function_declaration (BalaGVariantModule* self,
                                                                                      BalaEnum* en);
BalaCCodeFunction* bala_gvariant_module_generate_enum_to_string_function (BalaGVariantModule* self,
                                                                          BalaEnum* en);
void bala_gvariant_module_write_expression (BalaGVariantModule* self,
                                            BalaDataType* type,
                                            BalaCCodeExpression* builder_expr,
                                            BalaCCodeExpression* expr,
                                            BalaSymbol* sym);
BalaGVariantModule* bala_gvariant_module_new (void);
BalaGVariantModule* bala_gvariant_module_construct (GType object_type);
GType bala_interface_register_function_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaInterfaceRegisterFunction, bala_typeregister_function_unref)
BalaInterface* bala_interface_register_function_get_interface_reference (BalaInterfaceRegisterFunction* self);
void bala_interface_register_function_set_interface_reference (BalaInterfaceRegisterFunction* self,
                                                               BalaInterface* value);
BalaInterfaceRegisterFunction* bala_interface_register_function_new (BalaInterface* iface);
BalaInterfaceRegisterFunction* bala_interface_register_function_construct (GType object_type,
                                                                           BalaInterface* iface);
GType bala_struct_register_function_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaStructRegisterFunction, bala_typeregister_function_unref)
BalaStruct* bala_struct_register_function_get_struct_reference (BalaStructRegisterFunction* self);
void bala_struct_register_function_set_struct_reference (BalaStructRegisterFunction* self,
                                                         BalaStruct* value);
BalaStructRegisterFunction* bala_struct_register_function_new (BalaStruct* st);
BalaStructRegisterFunction* bala_struct_register_function_construct (GType object_type,
                                                                     BalaStruct* st);
void bala_typeregister_function_init_from_type (BalaTypeRegisterFunction* self,
                                                BalaCodeContext* context,
                                                gboolean plugin,
                                                gboolean declaration_only);
BalaTypeSymbol* bala_typeregister_function_get_type_declaration (BalaTypeRegisterFunction* self);
gchar* bala_typeregister_function_get_type_struct_name (BalaTypeRegisterFunction* self);
gchar* bala_typeregister_function_get_base_init_func_name (BalaTypeRegisterFunction* self);
gchar* bala_typeregister_function_get_class_finalize_func_name (BalaTypeRegisterFunction* self);
gchar* bala_typeregister_function_get_base_finalize_func_name (BalaTypeRegisterFunction* self);
gchar* bala_typeregister_function_get_class_init_func_name (BalaTypeRegisterFunction* self);
gchar* bala_typeregister_function_get_instance_struct_size (BalaTypeRegisterFunction* self);
gchar* bala_typeregister_function_get_instance_init_func_name (BalaTypeRegisterFunction* self);
gchar* bala_typeregister_function_get_parent_type_name (BalaTypeRegisterFunction* self);
gchar* bala_typeregister_function_get_gtype_value_table_init_function_name (BalaTypeRegisterFunction* self);
gchar* bala_typeregister_function_get_gtype_value_table_peek_pointer_function_name (BalaTypeRegisterFunction* self);
gchar* bala_typeregister_function_get_gtype_value_table_free_function_name (BalaTypeRegisterFunction* self);
gchar* bala_typeregister_function_get_gtype_value_table_copy_function_name (BalaTypeRegisterFunction* self);
gchar* bala_typeregister_function_get_gtype_value_table_lcopy_value_function_name (BalaTypeRegisterFunction* self);
gchar* bala_typeregister_function_get_gtype_value_table_collect_value_function_name (BalaTypeRegisterFunction* self);
gchar* bala_typeregister_function_get_type_flags (BalaTypeRegisterFunction* self);
BalaCCodeFragment* bala_typeregister_function_get_type_interface_init_declaration (BalaTypeRegisterFunction* self);
void bala_typeregister_function_get_type_interface_init_statements (BalaTypeRegisterFunction* self,
                                                                    BalaCodeContext* context,
                                                                    BalaCCodeBlock* block,
                                                                    gboolean plugin);
BalaCCodeFragment* bala_typeregister_function_get_source_declaration (BalaTypeRegisterFunction* self);
BalaCCodeFragment* bala_typeregister_function_get_declaration (BalaTypeRegisterFunction* self);
BalaCCodeFragment* bala_typeregister_function_get_definition (BalaTypeRegisterFunction* self);
BalaSymbolAccessibility bala_typeregister_function_get_accessibility (BalaTypeRegisterFunction* self);
BalaTypeRegisterFunction* bala_typeregister_function_construct (GType object_type);

G_END_DECLS

#endif
