/* balagee.h generated by balac, the Bala compiler, do not modify */

#ifndef __BALAGEE_H__
#define __BALAGEE_H__

#include <glib-object.h>
#include <glib.h>

G_BEGIN_DECLS

#define BALA_TYPE_ITERABLE (bala_iterable_get_type ())
#define BALA_ITERABLE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_ITERABLE, BalaIterable))
#define BALA_ITERABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_ITERABLE, BalaIterableClass))
#define BALA_IS_ITERABLE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_ITERABLE))
#define BALA_IS_ITERABLE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_ITERABLE))
#define BALA_ITERABLE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_ITERABLE, BalaIterableClass))

typedef struct _BalaIterable BalaIterable;
typedef struct _BalaIterableClass BalaIterableClass;
typedef struct _BalaIterablePrivate BalaIterablePrivate;

#define BALA_TYPE_ITERATOR (bala_iterator_get_type ())
#define BALA_ITERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_ITERATOR, BalaIterator))
#define BALA_ITERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_ITERATOR, BalaIteratorClass))
#define BALA_IS_ITERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_ITERATOR))
#define BALA_IS_ITERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_ITERATOR))
#define BALA_ITERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_ITERATOR, BalaIteratorClass))

typedef struct _BalaIterator BalaIterator;
typedef struct _BalaIteratorClass BalaIteratorClass;

#define BALA_TYPE_COLLECTION (bala_collection_get_type ())
#define BALA_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_COLLECTION, BalaCollection))
#define BALA_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_COLLECTION, BalaCollectionClass))
#define BALA_IS_COLLECTION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_COLLECTION))
#define BALA_IS_COLLECTION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_COLLECTION))
#define BALA_COLLECTION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_COLLECTION, BalaCollectionClass))

typedef struct _BalaCollection BalaCollection;
typedef struct _BalaCollectionClass BalaCollectionClass;
typedef struct _BalaCollectionPrivate BalaCollectionPrivate;

#define BALA_TYPE_LIST (bala_list_get_type ())
#define BALA_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_LIST, BalaList))
#define BALA_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_LIST, BalaListClass))
#define BALA_IS_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_LIST))
#define BALA_IS_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_LIST))
#define BALA_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_LIST, BalaListClass))

typedef struct _BalaList BalaList;
typedef struct _BalaListClass BalaListClass;
typedef struct _BalaListPrivate BalaListPrivate;

#define BALA_TYPE_ARRAY_LIST (bala_array_list_get_type ())
#define BALA_ARRAY_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_ARRAY_LIST, BalaArrayList))
#define BALA_ARRAY_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_ARRAY_LIST, BalaArrayListClass))
#define BALA_IS_ARRAY_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_ARRAY_LIST))
#define BALA_IS_ARRAY_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_ARRAY_LIST))
#define BALA_ARRAY_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_ARRAY_LIST, BalaArrayListClass))

typedef struct _BalaArrayList BalaArrayList;
typedef struct _BalaArrayListClass BalaArrayListClass;
typedef struct _BalaArrayListPrivate BalaArrayListPrivate;

#define BALA_TYPE_MAP (bala_map_get_type ())
#define BALA_MAP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_MAP, BalaMap))
#define BALA_MAP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_MAP, BalaMapClass))
#define BALA_IS_MAP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_MAP))
#define BALA_IS_MAP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_MAP))
#define BALA_MAP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_MAP, BalaMapClass))

typedef struct _BalaMap BalaMap;
typedef struct _BalaMapClass BalaMapClass;
typedef struct _BalaMapPrivate BalaMapPrivate;

#define BALA_TYPE_SET (bala_set_get_type ())
#define BALA_SET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_SET, BalaSet))
#define BALA_SET_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_SET, BalaSetClass))
#define BALA_IS_SET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_SET))
#define BALA_IS_SET_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_SET))
#define BALA_SET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_SET, BalaSetClass))

typedef struct _BalaSet BalaSet;
typedef struct _BalaSetClass BalaSetClass;

#define BALA_TYPE_MAP_ITERATOR (bala_map_iterator_get_type ())
#define BALA_MAP_ITERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_MAP_ITERATOR, BalaMapIterator))
#define BALA_MAP_ITERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_MAP_ITERATOR, BalaMapIteratorClass))
#define BALA_IS_MAP_ITERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_MAP_ITERATOR))
#define BALA_IS_MAP_ITERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_MAP_ITERATOR))
#define BALA_MAP_ITERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_MAP_ITERATOR, BalaMapIteratorClass))

typedef struct _BalaMapIterator BalaMapIterator;
typedef struct _BalaMapIteratorClass BalaMapIteratorClass;

#define BALA_TYPE_HASH_MAP (bala_hash_map_get_type ())
#define BALA_HASH_MAP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_HASH_MAP, BalaHashMap))
#define BALA_HASH_MAP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_HASH_MAP, BalaHashMapClass))
#define BALA_IS_HASH_MAP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_HASH_MAP))
#define BALA_IS_HASH_MAP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_HASH_MAP))
#define BALA_HASH_MAP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_HASH_MAP, BalaHashMapClass))

typedef struct _BalaHashMap BalaHashMap;
typedef struct _BalaHashMapClass BalaHashMapClass;
typedef struct _BalaHashMapPrivate BalaHashMapPrivate;
typedef struct _BalaSetPrivate BalaSetPrivate;

#define BALA_TYPE_HASH_SET (bala_hash_set_get_type ())
#define BALA_HASH_SET(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), BALA_TYPE_HASH_SET, BalaHashSet))
#define BALA_HASH_SET_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), BALA_TYPE_HASH_SET, BalaHashSetClass))
#define BALA_IS_HASH_SET(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), BALA_TYPE_HASH_SET))
#define BALA_IS_HASH_SET_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), BALA_TYPE_HASH_SET))
#define BALA_HASH_SET_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), BALA_TYPE_HASH_SET, BalaHashSetClass))

typedef struct _BalaHashSet BalaHashSet;
typedef struct _BalaHashSetClass BalaHashSetClass;
typedef struct _BalaHashSetPrivate BalaHashSetPrivate;
typedef struct _BalaMapIteratorPrivate BalaMapIteratorPrivate;
typedef struct _BalaIteratorPrivate BalaIteratorPrivate;

struct _BalaIterable {
	GTypeInstance parent_instance;
	volatile int ref_count;
	BalaIterablePrivate * priv;
};

struct _BalaIterableClass {
	GTypeClass parent_class;
	void (*finalize) (BalaIterable *self);
	GType (*get_element_type) (BalaIterable* self);
	BalaIterator* (*iterator) (BalaIterable* self);
};

struct _BalaCollection {
	BalaIterable parent_instance;
	BalaCollectionPrivate * priv;
};

struct _BalaCollectionClass {
	BalaIterableClass parent_class;
	gint (*get_size) (BalaCollection* self);
	gboolean (*get_is_empty) (BalaCollection* self);
	gboolean (*contains) (BalaCollection* self, gconstpointer item);
	gboolean (*add) (BalaCollection* self, gconstpointer item);
	gboolean (*remove) (BalaCollection* self, gconstpointer item);
	void (*clear) (BalaCollection* self);
	gboolean (*add_all) (BalaCollection* self, BalaCollection* collection);
	gpointer* (*to_array) (BalaCollection* self, gint* result_length1);
};

struct _BalaList {
	BalaCollection parent_instance;
	BalaListPrivate * priv;
};

struct _BalaListClass {
	BalaCollectionClass parent_class;
	gpointer (*get) (BalaList* self, gint index);
	void (*set) (BalaList* self, gint index, gconstpointer item);
	gint (*index_of) (BalaList* self, gconstpointer item);
	void (*insert) (BalaList* self, gint index, gconstpointer item);
	gpointer (*remove_at) (BalaList* self, gint index);
	gpointer (*first) (BalaList* self);
	gpointer (*last) (BalaList* self);
	void (*insert_all) (BalaList* self, gint index, BalaCollection* collection);
	void (*sort) (BalaList* self, GCompareDataFunc compare_func, gpointer compare_func_target, GDestroyNotify compare_func_target_destroy_notify);
};

struct _BalaArrayList {
	BalaList parent_instance;
	gpointer* _items;
	gint _items_length1;
	gint __items_size_;
	gint _size;
	BalaArrayListPrivate * priv;
};

struct _BalaArrayListClass {
	BalaListClass parent_class;
};

struct _BalaMap {
	GTypeInstance parent_instance;
	volatile int ref_count;
	BalaMapPrivate * priv;
};

struct _BalaMapClass {
	GTypeClass parent_class;
	void (*finalize) (BalaMap *self);
	gint (*get_size) (BalaMap* self);
	BalaSet* (*get_keys) (BalaMap* self);
	BalaCollection* (*get_values) (BalaMap* self);
	gboolean (*contains) (BalaMap* self, gconstpointer key);
	gpointer (*get) (BalaMap* self, gconstpointer key);
	void (*set) (BalaMap* self, gconstpointer key, gconstpointer value);
	gboolean (*remove) (BalaMap* self, gconstpointer key);
	void (*clear) (BalaMap* self);
	BalaMapIterator* (*map_iterator) (BalaMap* self);
};

struct _BalaHashMap {
	BalaMap parent_instance;
	BalaHashMapPrivate * priv;
};

struct _BalaHashMapClass {
	BalaMapClass parent_class;
};

struct _BalaSet {
	BalaCollection parent_instance;
	BalaSetPrivate * priv;
};

struct _BalaSetClass {
	BalaCollectionClass parent_class;
};

struct _BalaHashSet {
	BalaSet parent_instance;
	BalaHashSetPrivate * priv;
};

struct _BalaHashSetClass {
	BalaSetClass parent_class;
};

struct _BalaMapIterator {
	GTypeInstance parent_instance;
	volatile int ref_count;
	BalaMapIteratorPrivate * priv;
};

struct _BalaMapIteratorClass {
	GTypeClass parent_class;
	void (*finalize) (BalaMapIterator *self);
	gboolean (*next) (BalaMapIterator* self);
	gpointer (*get_key) (BalaMapIterator* self);
	gpointer (*get_value) (BalaMapIterator* self);
};

struct _BalaIterator {
	GTypeInstance parent_instance;
	volatile int ref_count;
	BalaIteratorPrivate * priv;
};

struct _BalaIteratorClass {
	GTypeClass parent_class;
	void (*finalize) (BalaIterator *self);
	gboolean (*next) (BalaIterator* self);
	gboolean (*has_next) (BalaIterator* self);
	gpointer (*get) (BalaIterator* self);
	void (*remove) (BalaIterator* self);
	gboolean (*get_valid) (BalaIterator* self);
};

gpointer bala_iterable_ref (gpointer instance);
void bala_iterable_unref (gpointer instance);
GParamSpec* bala_param_spec_iterable (const gchar* name,
                                      const gchar* nick,
                                      const gchar* blurb,
                                      GType object_type,
                                      GParamFlags flags);
void bala_value_set_iterable (GValue* value,
                              gpointer v_object);
void bala_value_take_iterable (GValue* value,
                               gpointer v_object);
gpointer bala_value_get_iterable (const GValue* value);
GType bala_iterable_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaIterable, bala_iterable_unref)
gpointer bala_iterator_ref (gpointer instance);
void bala_iterator_unref (gpointer instance);
GParamSpec* bala_param_spec_iterator (const gchar* name,
                                      const gchar* nick,
                                      const gchar* blurb,
                                      GType object_type,
                                      GParamFlags flags);
void bala_value_set_iterator (GValue* value,
                              gpointer v_object);
void bala_value_take_iterator (GValue* value,
                               gpointer v_object);
gpointer bala_value_get_iterator (const GValue* value);
GType bala_iterator_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaIterator, bala_iterator_unref)
GType bala_collection_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaCollection, bala_iterable_unref)
GType bala_list_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaList, bala_iterable_unref)
GType bala_array_list_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaArrayList, bala_iterable_unref)
void bala_array_list_set_equal_func (BalaArrayList* self,
                                     GEqualFunc value);
BalaArrayList* bala_array_list_new (GType g_type,
                                    GBoxedCopyFunc g_dup_func,
                                    GDestroyNotify g_destroy_func,
                                    GEqualFunc equal_func);
BalaArrayList* bala_array_list_construct (GType object_type,
                                          GType g_type,
                                          GBoxedCopyFunc g_dup_func,
                                          GDestroyNotify g_destroy_func,
                                          GEqualFunc equal_func);
gint bala_collection_get_size (BalaCollection* self);
gboolean bala_collection_get_is_empty (BalaCollection* self);
gboolean bala_collection_contains (BalaCollection* self,
                                   gconstpointer item);
gboolean bala_collection_add (BalaCollection* self,
                              gconstpointer item);
gboolean bala_collection_remove (BalaCollection* self,
                                 gconstpointer item);
void bala_collection_clear (BalaCollection* self);
gboolean bala_collection_add_all (BalaCollection* self,
                                  BalaCollection* collection);
gpointer* bala_collection_to_array (BalaCollection* self,
                                    gint* result_length1);
BalaCollection* bala_collection_construct (GType object_type,
                                           GType g_type,
                                           GBoxedCopyFunc g_dup_func,
                                           GDestroyNotify g_destroy_func);
gpointer bala_map_ref (gpointer instance);
void bala_map_unref (gpointer instance);
GParamSpec* bala_param_spec_map (const gchar* name,
                                 const gchar* nick,
                                 const gchar* blurb,
                                 GType object_type,
                                 GParamFlags flags);
void bala_value_set_map (GValue* value,
                         gpointer v_object);
void bala_value_take_map (GValue* value,
                          gpointer v_object);
gpointer bala_value_get_map (const GValue* value);
GType bala_map_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaMap, bala_map_unref)
GType bala_set_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaSet, bala_iterable_unref)
gpointer bala_map_iterator_ref (gpointer instance);
void bala_map_iterator_unref (gpointer instance);
GParamSpec* bala_param_spec_map_iterator (const gchar* name,
                                          const gchar* nick,
                                          const gchar* blurb,
                                          GType object_type,
                                          GParamFlags flags);
void bala_value_set_map_iterator (GValue* value,
                                  gpointer v_object);
void bala_value_take_map_iterator (GValue* value,
                                   gpointer v_object);
gpointer bala_value_get_map_iterator (const GValue* value);
GType bala_map_iterator_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaMapIterator, bala_map_iterator_unref)
GType bala_hash_map_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaHashMap, bala_map_unref)
void bala_hash_map_set_key_hash_func (BalaHashMap* self,
                                      GHashFunc value);
void bala_hash_map_set_key_equal_func (BalaHashMap* self,
                                       GEqualFunc value);
void bala_hash_map_set_value_equal_func (BalaHashMap* self,
                                         GEqualFunc value);
BalaHashMap* bala_hash_map_new (GType k_type,
                                GBoxedCopyFunc k_dup_func,
                                GDestroyNotify k_destroy_func,
                                GType v_type,
                                GBoxedCopyFunc v_dup_func,
                                GDestroyNotify v_destroy_func,
                                GHashFunc key_hash_func,
                                GEqualFunc key_equal_func,
                                GEqualFunc value_equal_func);
BalaHashMap* bala_hash_map_construct (GType object_type,
                                      GType k_type,
                                      GBoxedCopyFunc k_dup_func,
                                      GDestroyNotify k_destroy_func,
                                      GType v_type,
                                      GBoxedCopyFunc v_dup_func,
                                      GDestroyNotify v_destroy_func,
                                      GHashFunc key_hash_func,
                                      GEqualFunc key_equal_func,
                                      GEqualFunc value_equal_func);
GType bala_hash_set_get_type (void) G_GNUC_CONST;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (BalaHashSet, bala_iterable_unref)
void bala_hash_set_set_hash_func (BalaHashSet* self,
                                  GHashFunc value);
void bala_hash_set_set_equal_func (BalaHashSet* self,
                                   GEqualFunc value);
BalaHashSet* bala_hash_set_new (GType g_type,
                                GBoxedCopyFunc g_dup_func,
                                GDestroyNotify g_destroy_func,
                                GHashFunc hash_func,
                                GEqualFunc equal_func);
BalaHashSet* bala_hash_set_construct (GType object_type,
                                      GType g_type,
                                      GBoxedCopyFunc g_dup_func,
                                      GDestroyNotify g_destroy_func,
                                      GHashFunc hash_func,
                                      GEqualFunc equal_func);
GType bala_iterable_get_element_type (BalaIterable* self);
BalaIterator* bala_iterable_iterator (BalaIterable* self);
BalaIterable* bala_iterable_construct (GType object_type,
                                       GType g_type,
                                       GBoxedCopyFunc g_dup_func,
                                       GDestroyNotify g_destroy_func);
gboolean bala_map_iterator_next (BalaMapIterator* self);
gpointer bala_map_iterator_get_key (BalaMapIterator* self);
gpointer bala_map_iterator_get_value (BalaMapIterator* self);
BalaMapIterator* bala_map_iterator_construct (GType object_type,
                                              GType k_type,
                                              GBoxedCopyFunc k_dup_func,
                                              GDestroyNotify k_destroy_func,
                                              GType v_type,
                                              GBoxedCopyFunc v_dup_func,
                                              GDestroyNotify v_destroy_func);
gboolean bala_iterator_next (BalaIterator* self);
gboolean bala_iterator_has_next (BalaIterator* self);
gpointer bala_iterator_get (BalaIterator* self);
void bala_iterator_remove (BalaIterator* self);
gboolean bala_iterator_get_valid (BalaIterator* self);
BalaIterator* bala_iterator_construct (GType object_type,
                                       GType g_type,
                                       GBoxedCopyFunc g_dup_func,
                                       GDestroyNotify g_destroy_func);
gpointer bala_list_get (BalaList* self,
                        gint index);
void bala_list_set (BalaList* self,
                    gint index,
                    gconstpointer item);
gint bala_list_index_of (BalaList* self,
                         gconstpointer item);
void bala_list_insert (BalaList* self,
                       gint index,
                       gconstpointer item);
gpointer bala_list_remove_at (BalaList* self,
                              gint index);
gpointer bala_list_first (BalaList* self);
gpointer bala_list_last (BalaList* self);
void bala_list_insert_all (BalaList* self,
                           gint index,
                           BalaCollection* collection);
void bala_list_sort (BalaList* self,
                     GCompareDataFunc compare_func,
                     gpointer compare_func_target,
                     GDestroyNotify compare_func_target_destroy_notify);
BalaList* bala_list_construct (GType object_type,
                               GType g_type,
                               GBoxedCopyFunc g_dup_func,
                               GDestroyNotify g_destroy_func);
gint bala_map_get_size (BalaMap* self);
BalaSet* bala_map_get_keys (BalaMap* self);
BalaCollection* bala_map_get_values (BalaMap* self);
gboolean bala_map_contains (BalaMap* self,
                            gconstpointer key);
gpointer bala_map_get (BalaMap* self,
                       gconstpointer key);
void bala_map_set (BalaMap* self,
                   gconstpointer key,
                   gconstpointer value);
gboolean bala_map_remove (BalaMap* self,
                          gconstpointer key);
void bala_map_clear (BalaMap* self);
BalaMapIterator* bala_map_map_iterator (BalaMap* self);
BalaMap* bala_map_construct (GType object_type,
                             GType k_type,
                             GBoxedCopyFunc k_dup_func,
                             GDestroyNotify k_destroy_func,
                             GType v_type,
                             GBoxedCopyFunc v_dup_func,
                             GDestroyNotify v_destroy_func);
BalaSet* bala_set_construct (GType object_type,
                             GType g_type,
                             GBoxedCopyFunc g_dup_func,
                             GDestroyNotify g_destroy_func);

G_END_DECLS

#endif
